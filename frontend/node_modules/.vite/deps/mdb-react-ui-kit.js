import {
  require_react_dom
} from "./chunk-F6F7MSRS.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-KVZCIEWH.js";

// node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a2, b2) {
      if (a2 === b2)
        return true;
      if (a2 && b2 && typeof a2 == "object" && typeof b2 == "object") {
        if (a2.constructor !== b2.constructor)
          return false;
        var length, i2, keys;
        if (Array.isArray(a2)) {
          length = a2.length;
          if (length != b2.length)
            return false;
          for (i2 = length; i2-- !== 0; )
            if (!equal(a2[i2], b2[i2]))
              return false;
          return true;
        }
        var it;
        if (hasMap && a2 instanceof Map && b2 instanceof Map) {
          if (a2.size !== b2.size)
            return false;
          it = a2.entries();
          while (!(i2 = it.next()).done)
            if (!b2.has(i2.value[0]))
              return false;
          it = a2.entries();
          while (!(i2 = it.next()).done)
            if (!equal(i2.value[1], b2.get(i2.value[0])))
              return false;
          return true;
        }
        if (hasSet && a2 instanceof Set && b2 instanceof Set) {
          if (a2.size !== b2.size)
            return false;
          it = a2.entries();
          while (!(i2 = it.next()).done)
            if (!b2.has(i2.value[0]))
              return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a2) && ArrayBuffer.isView(b2)) {
          length = a2.length;
          if (length != b2.length)
            return false;
          for (i2 = length; i2-- !== 0; )
            if (a2[i2] !== b2[i2])
              return false;
          return true;
        }
        if (a2.constructor === RegExp)
          return a2.source === b2.source && a2.flags === b2.flags;
        if (a2.valueOf !== Object.prototype.valueOf)
          return a2.valueOf() === b2.valueOf();
        if (a2.toString !== Object.prototype.toString)
          return a2.toString() === b2.toString();
        keys = Object.keys(a2);
        length = keys.length;
        if (length !== Object.keys(b2).length)
          return false;
        for (i2 = length; i2-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b2, keys[i2]))
            return false;
        if (hasElementType && a2 instanceof Element)
          return false;
        for (i2 = length; i2-- !== 0; ) {
          if ((keys[i2] === "_owner" || keys[i2] === "__v" || keys[i2] === "__o") && a2.$$typeof) {
            continue;
          }
          if (!equal(a2[keys[i2]], b2[keys[i2]]))
            return false;
        }
        return true;
      }
      return a2 !== a2 && b2 !== b2;
    }
    module.exports = function isEqual2(a2, b2) {
      try {
        return equal(a2, b2);
      } catch (error) {
        if ((error.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error;
      }
    };
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__ = true;
    var warning2 = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format2, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format2.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
      warning2 = function(condition, format2, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format2 === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format2].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning2;
  }
});

// node_modules/mdb-react-ui-kit/dist/mdb-react-ui-kit.esm.js
var import_react = __toESM(require_react());

// node_modules/clsx/dist/clsx.m.js
function toVal(mix) {
  var k2, y2, str = "";
  if (typeof mix === "string" || typeof mix === "number") {
    str += mix;
  } else if (typeof mix === "object") {
    if (Array.isArray(mix)) {
      for (k2 = 0; k2 < mix.length; k2++) {
        if (mix[k2]) {
          if (y2 = toVal(mix[k2])) {
            str && (str += " ");
            str += y2;
          }
        }
      }
    } else {
      for (k2 in mix) {
        if (mix[k2]) {
          str && (str += " ");
          str += k2;
        }
      }
    }
  }
  return str;
}
function clsx_m_default() {
  var i2 = 0, tmp, x2, str = "";
  while (i2 < arguments.length) {
    if (tmp = arguments[i2++]) {
      if (x2 = toVal(tmp)) {
        str && (str += " ");
        str += x2;
      }
    }
  }
  return str;
}

// node_modules/mdb-react-ui-kit/dist/mdb-react-ui-kit.esm.js
var import_react_dom = __toESM(require_react_dom());

// node_modules/react-popper/lib/esm/Popper.js
var React4 = __toESM(require_react());

// node_modules/react-popper/lib/esm/Manager.js
var React = __toESM(require_react());
var ManagerReferenceNodeContext = React.createContext();
var ManagerReferenceNodeSetterContext = React.createContext();

// node_modules/react-popper/lib/esm/utils.js
var React2 = __toESM(require_react());
var fromEntries = function fromEntries2(entries) {
  return entries.reduce(function(acc, _ref) {
    var key = _ref[0], value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
var useIsomorphicLayoutEffect = typeof window !== "undefined" && window.document && window.document.createElement ? React2.useLayoutEffect : React2.useEffect;

// node_modules/react-popper/lib/esm/usePopper.js
var React3 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());

// node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}

// node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (node.toString() !== "[object Window]") {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}

// node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}

// node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (isHTMLElement(element) && includeScale) {
    var offsetHeight = element.offsetHeight;
    var offsetWidth = element.offsetWidth;
    if (offsetWidth > 0) {
      scaleX = round(rect.width) / offsetWidth || 1;
    }
    if (offsetHeight > 0) {
      scaleY = round(rect.height) / offsetHeight || 1;
    }
  }
  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}

// node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}

// node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}

// node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}

// node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
}

// node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
  var isIE = navigator.userAgent.indexOf("Trident") !== -1;
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle2(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle2(currentNode);
    if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}

// node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}

// node_modules/@popperjs/core/lib/utils/within.js
function within(min2, value, max2) {
  return max(min2, min(value, max2));
}
function withinMaxClamp(min2, value, max2) {
  var v2 = within(min2, value, max2);
  return v2 > max2 ? max2 : v2;
}

// node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

// node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

// node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

// node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = function toPaddingObject2(padding, state) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min2 = paddingObject[minProp];
  var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min2, center, max2);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
function effect2(_ref2) {
  var state = _ref2.state, options = _ref2.options;
  var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (true) {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" "));
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    if (true) {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" "));
    }
    return;
  }
  state.elements.arrow = arrowElement;
}
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}

// node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref) {
  var x2 = _ref.x, y2 = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x2 * dpr) / dpr || 0,
    y: round(y2 * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x2 = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y2 = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x: x2,
    y: y2
  }) : {
    x: x2,
    y: y2
  };
  x2 = _ref3.x;
  y2 = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle2(offsetParent).position !== "static" && position === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
      y2 -= offsetY - popperRect.height;
      y2 *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
      x2 -= offsetX - popperRect.width;
      x2 *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x2,
    y: y2
  }) : {
    x: x2,
    y: y2
  };
  x2 = _ref4.x;
  y2 = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x2 + "px, " + y2 + "px)" : "translate3d(" + x2 + "px, " + y2 + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y2 + "px" : "", _Object$assign2[sideX] = hasX ? x2 + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state, options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  if (true) {
    var transitionProperty = getComputedStyle2(state.elements.popper).transitionProperty || "";
    if (adaptive && ["transform", "top", "right", "bottom", "left"].some(function(property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
    }
  }
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref) {
  var state = _ref.state, instance = _ref.instance, options = _ref.options;
  var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect3,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}

// node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash2 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

// node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x2 = 0;
  var y2 = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x2 = visualViewport.offsetLeft;
      y2 = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x2 + getWindowScrollBarX(element),
    y: y2
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x2 = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y2 = -winScroll.scrollTop;
  if (getComputedStyle2(body || html).direction === "rtl") {
    x2 += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x: x2,
    y: y2
  };
}

// node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle2(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

// node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node) {
  if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}

// node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
}

// node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle2(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

// node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}

// node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}

// node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements2.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements2;
    if (true) {
      console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" "));
    }
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a2, b2) {
    return overflows[a2] - overflows[b2];
  });
}

// node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i2 = 0; i2 < placements2.length; i2++) {
    var placement = placements2[i2];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref) {
  var state = _ref.state, name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x2 = _data$state$placement.x, y2 = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x2;
    state.modifiersData.popperOffsets.y += y2;
  }
  state.modifiersData[name] = data;
}
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}

// node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min2 = offset2 + overflow[mainSide];
    var max2 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min2, tetherMin) : min2, offset2, tether ? max(max2, tetherMax) : max2);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

// node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

// node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

// node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}

// node_modules/@popperjs/core/lib/utils/format.js
function format(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return [].concat(args).reduce(function(p, c2) {
    return p.replace(/%s/, c2);
  }, str);
}

// node_modules/@popperjs/core/lib/utils/validateModifiers.js
var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ["name", "enabled", "phase", "fn", "effect", "requires", "options"];
function validateModifiers(modifiers) {
  modifiers.forEach(function(modifier) {
    [].concat(Object.keys(modifier), VALID_PROPERTIES).filter(function(value, index, self) {
      return self.indexOf(value) === index;
    }).forEach(function(key) {
      switch (key) {
        case "name":
          if (typeof modifier.name !== "string") {
            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', '"' + String(modifier.name) + '"'));
          }
          break;
        case "enabled":
          if (typeof modifier.enabled !== "boolean") {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', '"' + String(modifier.enabled) + '"'));
          }
          break;
        case "phase":
          if (modifierPhases.indexOf(modifier.phase) < 0) {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(", "), '"' + String(modifier.phase) + '"'));
          }
          break;
        case "fn":
          if (typeof modifier.fn !== "function") {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', '"' + String(modifier.fn) + '"'));
          }
          break;
        case "effect":
          if (modifier.effect != null && typeof modifier.effect !== "function") {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', '"' + String(modifier.fn) + '"'));
          }
          break;
        case "requires":
          if (modifier.requires != null && !Array.isArray(modifier.requires)) {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', '"' + String(modifier.requires) + '"'));
          }
          break;
        case "requiresIfExists":
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', '"' + String(modifier.requiresIfExists) + '"'));
          }
          break;
        case "options":
        case "data":
          break;
        default:
          console.error('PopperJS: an invalid property has been provided to the "' + modifier.name + '" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s2) {
            return '"' + s2 + '"';
          }).join(", ") + '; but "' + key + '" was provided.');
      }
      modifier.requires && modifier.requires.forEach(function(requirement) {
        if (modifiers.find(function(mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

// node_modules/@popperjs/core/lib/utils/uniqueBy.js
function uniqueBy(arr, fn2) {
  var identifiers = /* @__PURE__ */ new Set();
  return arr.filter(function(item) {
    var identifier = fn2(item);
    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

// node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}

// node_modules/@popperjs/core/lib/createPopper.js
var INVALID_ELEMENT_ERROR = "Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.";
var INFINITE_LOOP_ERROR = "Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.";
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers3 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper4(reference2, popper2, options) {
    if (options === void 0) {
      options = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: function setOptions(setOptionsAction) {
        var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options2);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers3, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m2) {
          return m2.enabled;
        });
        if (true) {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);
          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function(_ref2) {
              var name = _ref2.name;
              return name === "flip";
            });
            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
            }
          }
          var _getComputedStyle = getComputedStyle2(popper2), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft;
          if ([marginTop, marginRight, marginBottom, marginLeft].some(function(margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
          }
        }
        runModifierEffects();
        return instance.update();
      },
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          if (true) {
            console.error(INVALID_ELEMENT_ERROR);
          }
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;
        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (true) {
            __debug_loops__ += 1;
            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      },
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      if (true) {
        console.error(INVALID_ELEMENT_ERROR);
      }
      return instance;
    }
    instance.setOptions(options).then(function(state2) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref3) {
        var name = _ref3.name, _ref3$options = _ref3.options, options2 = _ref3$options === void 0 ? {} : _ref3$options, effect4 = _ref3.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options2
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var createPopper = popperGenerator();

// node_modules/@popperjs/core/lib/popper-lite.js
var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default];
var createPopper2 = popperGenerator({
  defaultModifiers
});

// node_modules/@popperjs/core/lib/popper.js
var defaultModifiers2 = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
var createPopper3 = popperGenerator({
  defaultModifiers: defaultModifiers2
});

// node_modules/react-popper/lib/esm/usePopper.js
var import_react_fast_compare = __toESM(require_react_fast_compare());
var EMPTY_MODIFIERS = [];
var usePopper = function usePopper2(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }
  var prevOptions = React3.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || "bottom",
    strategy: options.strategy || "absolute",
    modifiers: options.modifiers || EMPTY_MODIFIERS
  };
  var _React$useState = React3.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  }), state = _React$useState[0], setState = _React$useState[1];
  var updateStateModifier = React3.useMemo(function() {
    return {
      name: "updateState",
      enabled: true,
      phase: "write",
      fn: function fn2(_ref) {
        var state2 = _ref.state;
        var elements = Object.keys(state2.elements);
        ReactDOM.flushSync(function() {
          setState({
            styles: fromEntries(elements.map(function(element) {
              return [element, state2.styles[element] || {}];
            })),
            attributes: fromEntries(elements.map(function(element) {
              return [element, state2.attributes[element]];
            }))
          });
        });
      },
      requires: ["computeStyles"]
    };
  }, []);
  var popperOptions = React3.useMemo(function() {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: "applyStyles",
        enabled: false
      }])
    };
    if ((0, import_react_fast_compare.default)(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = React3.useRef();
  useIsomorphicLayoutEffect(function() {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function() {
    if (referenceElement == null || popperElement == null) {
      return;
    }
    var createPopper4 = options.createPopper || createPopper3;
    var popperInstance = createPopper4(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function() {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

// node_modules/react-popper/lib/esm/Reference.js
var React5 = __toESM(require_react());
var import_warning = __toESM(require_warning());

// node_modules/mdb-react-ui-kit/dist/mdb-react-ui-kit.esm.js
var v = function() {
  return v = Object.assign || function(e2) {
    for (var t2, n2 = 1, a2 = arguments.length; n2 < a2; n2++)
      for (var r2 in t2 = arguments[n2])
        Object.prototype.hasOwnProperty.call(t2, r2) && (e2[r2] = t2[r2]);
    return e2;
  }, v.apply(this, arguments);
};
function g(e2, t2) {
  var n2 = {};
  for (var a2 in e2)
    Object.prototype.hasOwnProperty.call(e2, a2) && t2.indexOf(a2) < 0 && (n2[a2] = e2[a2]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var r2 = 0;
    for (a2 = Object.getOwnPropertySymbols(e2); r2 < a2.length; r2++)
      t2.indexOf(a2[r2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, a2[r2]) && (n2[a2[r2]] = e2[a2[r2]]);
  }
  return n2;
}
function h(e2, t2) {
  for (var n2 = 0, a2 = t2.length, r2 = e2.length; n2 < a2; n2++, r2++)
    e2[r2] = t2[n2];
  return e2;
}
var b = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.breakpoint, r2 = t2.fluid, l2 = t2.children, o2 = t2.className, c2 = t2.tag, i2 = g(t2, ["breakpoint", "fluid", "children", "className", "tag"]), s2 = clsx_m_default("".concat(r2 ? "container-fluid" : "container".concat(a2 ? "-" + a2 : "")), o2);
  return import_react.default.createElement(c2, v({ className: s2 }, i2, { ref: n2 }), l2);
});
b.defaultProps = { tag: "div" };
var N = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.center, r2 = t2.children, l2 = t2.className, o2 = t2.end, c2 = t2.lg, i2 = t2.md, s2 = t2.offsetLg, u2 = t2.offsetMd, m2 = t2.offsetSm, f = t2.order, p = t2.size, h2 = t2.sm, b2 = t2.start, N2 = t2.tag, w2 = t2.xl, y2 = t2.xxl, E2 = t2.xs, k2 = g(t2, ["center", "children", "className", "end", "lg", "md", "offsetLg", "offsetMd", "offsetSm", "order", "size", "sm", "start", "tag", "xl", "xxl", "xs"]), x2 = clsx_m_default(p && "col-".concat(p), E2 && "col-xs-".concat(E2), h2 && "col-sm-".concat(h2), i2 && "col-md-".concat(i2), c2 && "col-lg-".concat(c2), w2 && "col-xl-".concat(w2), y2 && "col-xxl-".concat(y2), p || E2 || h2 || i2 || c2 || w2 || y2 ? "" : "col", f && "order-".concat(f), b2 && "align-self-start", a2 && "align-self-center", o2 && "align-self-end", m2 && "offset-sm-".concat(m2), u2 && "offset-md-".concat(u2), s2 && "offset-lg-".concat(s2), l2);
  return import_react.default.createElement(N2, v({ className: x2, ref: n2 }, k2), r2);
});
N.defaultProps = { tag: "div" };
var w = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.color, l2 = t2.pill, o2 = t2.light, c2 = t2.dot, i2 = t2.tag, s2 = t2.children, u2 = t2.notification, m2 = g(t2, ["className", "color", "pill", "light", "dot", "tag", "children", "notification"]), f = clsx_m_default("badge", o2 ? r2 && "badge-".concat(r2) : r2 && "bg-".concat(r2), c2 && "badge-dot", l2 && "rounded-pill", u2 && "badge-notification", a2);
  return import_react.default.createElement(i2, v({ className: f, ref: n2 }, m2), s2);
});
w.defaultProps = { tag: "span", color: "primary" };
var y = function(a2) {
  var r2 = g(a2, []), l2 = (0, import_react.useState)(false), o2 = l2[0], c2 = l2[1], i2 = clsx_m_default("ripple-wave", o2 && "active");
  return (0, import_react.useEffect)(function() {
    var e2 = setTimeout(function() {
      c2(true);
    }, 50);
    return function() {
      clearTimeout(e2);
    };
  }, []), import_react.default.createElement("div", v({ className: i2 }, r2));
};
var E = import_react.default.forwardRef(function(r2, l2) {
  var o2 = r2.className, c2 = r2.rippleTag, i2 = r2.rippleCentered, s2 = r2.rippleDuration, u2 = r2.rippleUnbound, m2 = r2.rippleRadius, f = r2.rippleColor, p = r2.children, h2 = r2.onClick, b2 = g(r2, ["className", "rippleTag", "rippleCentered", "rippleDuration", "rippleUnbound", "rippleRadius", "rippleColor", "children", "onClick"]), N2 = function() {
    for (var t2 = [], n2 = 0; n2 < arguments.length; n2++)
      t2[n2] = arguments[n2];
    var a2 = import_react.default.useRef();
    return import_react.default.useEffect(function() {
      t2.forEach(function(e2) {
        e2 && ("function" == typeof e2 ? e2(a2.current) : e2.current = a2.current);
      });
    }, [t2]), a2;
  }(l2, (0, import_react.useRef)(null)), w2 = [0, 0, 0], E2 = ["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"], k2 = (0, import_react.useState)([]), x2 = k2[0], C2 = k2[1], T2 = (0, import_react.useState)(false), R2 = T2[0], S2 = T2[1], P2 = clsx_m_default("ripple", "ripple-surface", u2 && "ripple-surface-unbound", R2 && "ripple-surface-".concat(f), o2), L2 = function() {
    if (E2.find(function(e3) {
      return e3 === (null == f ? void 0 : f.toLowerCase());
    }))
      return S2(true);
    var e2 = I2(f).join(","), t2 = "rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%".split("{{color}}").join("".concat(e2));
    return "radial-gradient(circle, ".concat(t2, ")");
  }, I2 = function(e2) {
    return "transparent" === e2.toLowerCase() ? w2 : "#" === e2[0] ? function(e3) {
      return e3.length < 7 && (e3 = "#".concat(e3[1]).concat(e3[1]).concat(e3[2]).concat(e3[2]).concat(e3[3]).concat(e3[3])), [parseInt(e3.substr(1, 2), 16), parseInt(e3.substr(3, 2), 16), parseInt(e3.substr(5, 2), 16)];
    }(e2) : (-1 === e2.indexOf("rgb") && (e2 = function(e3) {
      var t2 = document.body.appendChild(document.createElement("fictum")), n2 = "rgb(1, 2, 3)";
      return t2.style.color = n2, t2.style.color !== n2 ? w2 : (t2.style.color = e3, t2.style.color === n2 || "" === t2.style.color ? w2 : (e3 = getComputedStyle(t2).color, document.body.removeChild(t2), e3));
    }(e2)), 0 === e2.indexOf("rgb") ? function(e3) {
      return (e3 = e3.match(/[.\d]+/g).map(function(e4) {
        return +Number(e4);
      })).length = 3, e3;
    }(e2) : w2);
  }, O2 = function(e2) {
    var t2, n2 = null === (t2 = N2.current) || void 0 === t2 ? void 0 : t2.getBoundingClientRect(), a2 = e2.clientX - n2.left, r3 = e2.clientY - n2.top, l3 = n2.height, o3 = n2.width, c3 = { delay: s2 && 0.5 * s2, duration: s2 && s2 - 0.5 * s2 }, d = function(e3) {
      var t3 = e3.offsetX, n3 = e3.offsetY, a3 = e3.height, r4 = e3.width, l4 = n3 <= a3 / 2, o4 = t3 <= r4 / 2, c4 = function(e4, t4) {
        return Math.sqrt(Math.pow(e4, 2) + Math.pow(t4, 2));
      }, i3 = n3 === a3 / 2 && t3 === r4 / 2, s3 = true === l4 && false === o4, d2 = true === l4 && true === o4, u4 = false === l4 && true === o4, m3 = false === l4 && false === o4, f3 = { topLeft: c4(t3, n3), topRight: c4(r4 - t3, n3), bottomLeft: c4(t3, a3 - n3), bottomRight: c4(r4 - t3, a3 - n3) }, p2 = 0;
      return i3 || m3 ? p2 = f3.topLeft : u4 ? p2 = f3.topRight : d2 ? p2 = f3.bottomRight : s3 && (p2 = f3.bottomLeft), 2 * p2;
    }({ offsetX: i2 ? l3 / 2 : a2, offsetY: i2 ? o3 / 2 : r3, height: l3, width: o3 }), u3 = m2 || d / 2, f2 = { left: "".concat(i2 ? o3 / 2 - u3 : a2 - u3, "px"), top: "".concat(i2 ? l3 / 2 - u3 : r3 - u3, "px"), height: "".concat(m2 ? 2 * m2 : d, "px"), width: "".concat(m2 ? 2 * m2 : d, "px"), transitionDelay: "0s, ".concat(c3.delay, "ms"), transitionDuration: "".concat(s2, "ms, ").concat(c3.duration, "ms") };
    return R2 ? f2 : v(v({}, f2), { backgroundImage: "".concat(L2()) });
  };
  return (0, import_react.useEffect)(function() {
    var e2 = setTimeout(function() {
      x2.length > 0 && C2(x2.splice(1, x2.length - 1));
    }, s2);
    return function() {
      clearTimeout(e2);
    };
  }, [s2, x2]), import_react.default.createElement(c2, v({ className: P2, onClick: function(e2) {
    return function(e3) {
      var t2 = O2(e3), n2 = x2.concat(t2);
      C2(n2), h2 && h2(e3);
    }(e2);
  }, ref: N2 }, b2), p, x2.map(function(t2, n2) {
    return import_react.default.createElement(y, { key: n2, style: t2 });
  }));
});
E.defaultProps = { rippleTag: "div", rippleDuration: 500, rippleRadius: 0, rippleColor: "dark" };
var k = import_react.default.forwardRef(function(n2, a2) {
  var r2, l2 = n2.className, o2 = n2.color, c2 = n2.outline, i2 = n2.children, s2 = n2.rounded, u2 = n2.disabled, m2 = n2.floating, f = n2.size, p = n2.href, h2 = n2.block, b2 = n2.active, N2 = n2.toggle, w2 = n2.noRipple, y2 = n2.tag, k2 = g(n2, ["className", "color", "outline", "children", "rounded", "disabled", "floating", "size", "href", "block", "active", "toggle", "noRipple", "tag"]), x2 = (0, import_react.useState)(b2 || false), C2 = x2[0], T2 = x2[1], R2 = o2 && ["light", "link"].includes(o2) || c2 ? "dark" : "light";
  r2 = "none" !== o2 ? c2 ? o2 ? "btn-outline-".concat(o2) : "btn-outline-primary" : o2 ? "btn-".concat(o2) : "btn-primary" : "";
  var S2 = clsx_m_default("none" !== o2 && "btn", r2, s2 && "btn-rounded", m2 && "btn-floating", f && "btn-".concat(f), "".concat((p || "button" !== y2) && u2 ? "disabled" : ""), h2 && "btn-block", C2 && "active", l2);
  return p && "a" !== y2 && (y2 = "a"), ["hr", "img", "input"].includes(y2) || w2 ? import_react.default.createElement(y2, v({ className: S2, onClick: N2 ? function() {
    T2(!C2);
  } : void 0, disabled: !(!u2 || "button" !== y2) || void 0, href: p, ref: a2 }, k2), i2) : import_react.default.createElement(E, v({ rippleTag: y2, rippleColor: R2, className: S2, onClick: N2 ? function() {
    T2(!C2);
  } : void 0, disabled: !(!u2 || "button" !== y2) || void 0, href: p, ref: a2 }, k2), i2);
});
k.defaultProps = { tag: "button", role: "button", color: "primary" };
var x = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.shadow, o2 = t2.toolbar, c2 = t2.size, i2 = t2.vertical, s2 = t2.tag, u2 = g(t2, ["className", "children", "shadow", "toolbar", "size", "vertical", "tag"]), m2 = clsx_m_default(o2 ? "btn-toolbar" : i2 ? "btn-group-vertical" : "btn-group", l2 && "shadow-".concat(l2), c2 && "btn-group-".concat(c2), a2);
  return import_react.default.createElement(s2, v({ className: m2, ref: n2 }, u2), r2);
});
x.defaultProps = { tag: "div", role: "group" };
var C = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = t2.color, c2 = t2.grow, i2 = t2.size, s2 = g(t2, ["className", "children", "tag", "color", "grow", "size"]), u2 = clsx_m_default("".concat(c2 ? "spinner-grow" : "spinner-border"), o2 && "text-".concat(o2), "".concat(i2 ? c2 ? "spinner-grow-" + i2 : "spinner-border-" + i2 : ""), a2);
  return import_react.default.createElement(l2, v({ className: u2, ref: n2 }, s2), r2);
});
C.defaultProps = { tag: "div" };
var T = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.border, o2 = t2.background, c2 = t2.tag, i2 = t2.shadow, s2 = t2.alignment, u2 = g(t2, ["className", "children", "border", "background", "tag", "shadow", "alignment"]), m2 = clsx_m_default("card", l2 && "border border-".concat(l2), o2 && "bg-".concat(o2), i2 && "shadow-".concat(i2), s2 && "text-".concat(s2), a2);
  return import_react.default.createElement(c2, v({ className: m2, ref: n2 }, u2), r2);
});
T.defaultProps = { tag: "div" };
var R = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.border, o2 = t2.background, c2 = t2.tag, i2 = g(t2, ["className", "children", "border", "background", "tag"]), s2 = clsx_m_default("card-header", l2 && "border-".concat(l2), o2 && "bg-".concat(o2), a2);
  return import_react.default.createElement(c2, v({ className: s2 }, i2, { ref: n2 }), r2);
});
R.defaultProps = { tag: "div" };
var S = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("card-subtitle", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
S.defaultProps = { tag: "p" };
var P = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("card-title", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
P.defaultProps = { tag: "h5" };
var L = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("card-text", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
L.defaultProps = { tag: "p" };
var I = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("card-body", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
I.defaultProps = { tag: "div" };
var O = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.border, o2 = t2.background, c2 = t2.tag, i2 = g(t2, ["className", "children", "border", "background", "tag"]), s2 = clsx_m_default("card-footer", l2 && "border-".concat(l2), o2 && "bg-".concat(o2), a2);
  return import_react.default.createElement(c2, v({ className: s2 }, i2, { ref: n2 }), r2);
});
O.defaultProps = { tag: "div" };
var A = function(t2) {
  var n2 = t2.className, a2 = t2.children, r2 = t2.overlay, l2 = t2.position, o2 = t2.fluid, c2 = g(t2, ["className", "children", "overlay", "position", "fluid"]), i2 = clsx_m_default(l2 && "card-img-".concat(l2), o2 && "img-fluid", r2 && "card-img", n2);
  return import_react.default.createElement("img", v({ className: i2 }, c2), a2);
};
var z = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("card-img-overlay", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
z.defaultProps = { tag: "div" };
var F = function(t2) {
  var n2 = t2.className, a2 = t2.children, r2 = g(t2, ["className", "children"]), l2 = clsx_m_default("card-link", n2);
  return import_react.default.createElement("a", v({ className: l2 }, r2), a2);
};
var M = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("card-group", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
M.defaultProps = { tag: "div" };
var H = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.tag, l2 = t2.horizontal, o2 = t2.horizontalSize, c2 = t2.light, i2 = t2.numbered, s2 = t2.children, u2 = t2.small, m2 = g(t2, ["className", "tag", "horizontal", "horizontalSize", "light", "numbered", "children", "small"]), f = clsx_m_default("list-group", l2 && (o2 ? "list-group-horizontal-".concat(o2) : "list-group-horizontal"), c2 && "list-group-light", i2 && "list-group-numbered", u2 && "list-group-small", a2);
  return import_react.default.createElement(r2, v({ className: f, ref: n2 }, m2), s2);
});
H.defaultProps = { tag: "ul" };
var B = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.tag, l2 = t2.active, o2 = t2.disabled, c2 = t2.action, i2 = t2.color, s2 = t2.children, u2 = t2.noBorders, m2 = g(t2, ["className", "tag", "active", "disabled", "action", "color", "children", "noBorders"]), f = "button" === r2, p = clsx_m_default("list-group-item", l2 && "active", o2 && !f && "disabled", c2 && "list-group-item-action", i2 && "list-group-item-".concat(i2), u2 && "border-0", a2);
  return import_react.default.createElement(r2, v({ className: p, disabled: f && o2, ref: n2 }, m2), s2);
});
B.defaultProps = { tag: "li" };
var D = function(a2) {
  var l2 = a2.className, o2 = a2.children, c2 = a2.disableMouseDown, i2 = a2.tag, s2 = a2.tooltipTag, m2 = a2.options, p = a2.placement, h2 = a2.title, b2 = a2.wrapperProps, N2 = a2.wrapperClass, w2 = a2.onShow, y2 = a2.onHide, E2 = a2.onMouseEnter, k2 = a2.onMouseLeave, x2 = g(a2, ["className", "children", "disableMouseDown", "tag", "tooltipTag", "options", "placement", "title", "wrapperProps", "wrapperClass", "onShow", "onHide", "onMouseEnter", "onMouseLeave"]), C2 = (0, import_react.useState)(null), T2 = C2[0], R2 = C2[1], S2 = (0, import_react.useState)(null), P2 = S2[0], L2 = S2[1], I2 = (0, import_react.useState)(false), O2 = I2[0], A2 = I2[1], z2 = (0, import_react.useState)(false), F2 = z2[0], M2 = z2[1], H2 = (0, import_react.useState)(false), B2 = H2[0], D2 = H2[1], j2 = (0, import_react.useState)(false), W2 = j2[0], V2 = j2[1], Y2 = clsx_m_default("tooltip", B2 && "show", "fade", "bs-tooltip-".concat(p), l2), q2 = usePopper(T2, P2, v({ placement: p }, m2)), X2 = q2.styles, U2 = q2.attributes;
  (0, import_react.useEffect)(function() {
    var e2, t2;
    return O2 || F2 ? (V2(true), e2 = setTimeout(function() {
      D2(true);
    }, 4)) : (D2(false), t2 = setTimeout(function() {
      V2(false);
    }, 300)), function() {
      clearTimeout(e2), clearTimeout(t2);
    };
  }, [O2, F2]);
  var G2 = (0, import_react.useCallback)(function(e2) {
    e2.target === T2 ? M2(true) : M2(false);
  }, [T2]);
  return (0, import_react.useEffect)(function() {
    if (!c2)
      return document.addEventListener("mousedown", G2), function() {
        document.removeEventListener("mousedown", G2);
      };
  }, [G2, c2]), import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement(i2, v({ className: N2, onMouseEnter: function(e2) {
    A2(true), null == w2 || w2(), E2 && E2(e2);
  }, onMouseLeave: function(e2) {
    A2(false), null == y2 || y2(), k2 && k2(e2);
  }, ref: R2 }, b2), o2), W2 && import_react_dom.default.createPortal(import_react.default.createElement(s2, v({ ref: L2, className: Y2, style: X2.popper }, U2.popper, { role: "tooltip" }, x2), import_react.default.createElement("div", { className: "tooltip-inner" }, h2)), document.body));
};
D.defaultProps = { tag: k, tooltipTag: "div", placement: "top" };
var j = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.around, r2 = t2.between, l2 = t2.bottom, o2 = t2.center, c2 = t2.children, i2 = t2.className, s2 = t2.evenly, u2 = t2.end, m2 = t2.middle, f = t2.start, p = t2.tag, h2 = t2.top, b2 = g(t2, ["around", "between", "bottom", "center", "children", "className", "evenly", "end", "middle", "start", "tag", "top"]), N2 = clsx_m_default("row", a2 && "justify-content-around", r2 && "justify-content-between", l2 && "align-self-end", o2 && "justify-content-center", s2 && "justifty-content-evenly", u2 && "justify-content-end", m2 && "align-self-center", f && "justify-content-start", h2 && "align-self-start", i2);
  return import_react.default.createElement(p, v({ className: N2 }, b2, { ref: n2 }), c2);
});
j.defaultProps = { tag: "div" };
var W = function(t2) {
  var n2, a2 = t2.animate, r2 = t2.className, l2 = t2.icon, o2 = t2.fab, c2 = t2.fas, i2 = t2.fal, s2 = t2.far, u2 = t2.flag, m2 = t2.spin, f = t2.fixed, p = t2.flip, h2 = t2.list, b2 = t2.size, N2 = t2.pull, w2 = t2.pulse, y2 = t2.color, E2 = t2.border, k2 = t2.rotate, x2 = t2.inverse, C2 = t2.stack, T2 = t2.iconType, R2 = t2.children, S2 = g(t2, ["animate", "className", "icon", "fab", "fas", "fal", "far", "flag", "spin", "fixed", "flip", "list", "size", "pull", "pulse", "color", "border", "rotate", "inverse", "stack", "iconType", "children"]);
  n2 = u2 ? "flag" : o2 ? "fab" : c2 ? "fas" : s2 ? "far" : i2 ? "fal" : "fa";
  var P2 = clsx_m_default(T2 ? "fa-".concat(T2) : n2, a2 && "fa-".concat(a2), u2 ? "flag-".concat(u2) : l2 && "fa-".concat(l2), b2 && "fa-".concat(b2), y2 && "text-".concat(y2), E2 && "fa-border", k2 && "fa-rotate-".concat(k2), N2 && "fa-pull-".concat(N2), m2 && !a2 && "fa-spin", h2 && "fa-li", f && "fa-fw", w2 && !a2 && "fa-pulse", x2 && "fa-inverse", p && "fa-flip-".concat(p), C2 && "fa-stack-".concat(C2), r2);
  return import_react.default.createElement("i", v({ className: P2 }, S2), R2);
};
var V = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = t2.variant, c2 = t2.color, i2 = t2.blockquote, s2 = t2.note, u2 = t2.noteColor, m2 = t2.listUnStyled, f = t2.listInLine, p = g(t2, ["className", "children", "tag", "variant", "color", "blockquote", "note", "noteColor", "listUnStyled", "listInLine"]), h2 = clsx_m_default(o2 && o2, i2 && "blockquote", s2 && "note", c2 && "text-".concat(c2), u2 && "note-".concat(u2), m2 && "list-unstyled", f && "list-inline", a2);
  return i2 && (l2 = "blockquote"), (m2 || f) && (l2 = "ul"), import_react.default.createElement(l2, v({ className: h2, ref: n2 }, p), r2);
});
V.defaultProps = { tag: "p" };
var Y = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.color, l2 = t2.uppercase, o2 = t2.bold, c2 = t2.children, i2 = g(t2, ["className", "color", "uppercase", "bold", "children"]), s2 = clsx_m_default("breadcrumb", o2 && "font-weight-bold", r2 && "text-".concat(r2), l2 && "text-uppercase", a2);
  return import_react.default.createElement("nav", { "aria-label": "breadcrumb" }, import_react.default.createElement("ol", v({ className: s2, ref: n2 }, i2), c2));
});
var q = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.active, l2 = t2.current, o2 = t2.children, c2 = g(t2, ["className", "active", "current", "children"]), i2 = clsx_m_default("breadcrumb-item", r2 && "active", a2);
  return import_react.default.createElement("li", v({ className: i2, ref: n2, "aria-current": r2 && l2 }, c2), o2);
});
q.defaultProps = { current: "page" };
var X = import_react.default.forwardRef(function(a2, l2) {
  var o2, c2 = a2.className, i2 = a2.children, s2 = a2.light, u2 = a2.dark, m2 = a2.scrolling, f = a2.fixed, p = a2.sticky, h2 = a2.scrollingNavbarOffset, b2 = a2.color, N2 = a2.transparent, w2 = a2.expand, y2 = a2.tag, E2 = a2.bgColor, k2 = g(a2, ["className", "children", "light", "dark", "scrolling", "fixed", "sticky", "scrollingNavbarOffset", "color", "transparent", "expand", "tag", "bgColor"]), x2 = (0, import_react.useState)(false), C2 = x2[0], T2 = x2[1], R2 = clsx_m_default(((o2 = { "navbar-light": s2, "navbar-dark": u2, "scrolling-navbar": m2 || h2, "top-nav-collapse": C2 })["text-".concat(b2)] = b2 && N2 ? C2 : b2, o2), f && "fixed-".concat(f), p && "sticky-top", "navbar", w2 && function(e2) {
    if (false !== e2)
      return "navbar-expand-".concat(e2);
  }(w2), E2 && "bg-".concat(E2), c2), S2 = (0, import_react.useCallback)(function() {
    h2 && window.pageYOffset > h2 ? T2(true) : T2(false);
  }, [h2]);
  return (0, import_react.useEffect)(function() {
    return (m2 || h2) && window.addEventListener("scroll", S2), function() {
      window.removeEventListener("scroll", S2);
    };
  }, [S2, m2, h2]), import_react.default.createElement(y2, v({ className: R2, role: "navigation" }, k2, { ref: l2 }), i2);
});
X.defaultProps = { tag: "nav" };
var U = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.className, l2 = t2.disabled, o2 = t2.active, c2 = t2.tag, i2 = g(t2, ["children", "className", "disabled", "active", "tag"]), s2 = clsx_m_default("nav-link", l2 ? "disabled" : o2 ? "active" : "", r2);
  return import_react.default.createElement(c2, v({ "data-test": "nav-link", className: s2, ref: n2 }, i2), a2);
});
U.defaultProps = { tag: "a", active: false, className: "", disabled: false };
var G = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("navbar-brand", a2);
  return import_react.default.createElement(l2, v({ className: c2, ref: n2 }, o2), r2);
});
G.defaultProps = { tag: "a" };
var J = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.className, l2 = t2.active, o2 = t2.text, c2 = t2.tag, i2 = g(t2, ["children", "className", "active", "text", "tag"]), s2 = clsx_m_default("nav-item", l2 && "active", o2 && "navbar-text", r2);
  return import_react.default.createElement(c2, v({}, i2, { className: s2, ref: n2 }), a2);
});
J.defaultProps = { tag: "li" };
var K = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.className, l2 = t2.right, o2 = t2.fullWidth, c2 = t2.left, i2 = t2.tag, s2 = g(t2, ["children", "className", "right", "fullWidth", "left", "tag"]), u2 = clsx_m_default("navbar-nav", o2 && "w-100", l2 && "ms-auto", c2 && "me-auto", r2);
  return import_react.default.createElement(i2, v({ className: u2, ref: n2 }, s2), a2);
});
K.defaultProps = { tag: "ul", fullWidth: true };
var Q = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.className, l2 = t2.tag, o2 = g(t2, ["children", "className", "tag"]), c2 = clsx_m_default("navbar-toggler", r2);
  return import_react.default.createElement(l2, v({}, o2, { className: c2, ref: n2 }), a2);
});
Q.defaultProps = { tag: "button" };
var Z = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.bgColor, l2 = t2.color, o2 = t2.className, c2 = g(t2, ["children", "bgColor", "color", "className"]), i2 = clsx_m_default(r2 && "bg-".concat(r2), l2 && "text-".concat(l2), o2);
  return import_react.default.createElement("footer", v({ className: i2 }, c2, { ref: n2 }), a2);
});
var $ = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.size, l2 = t2.circle, o2 = t2.center, c2 = t2.end, i2 = t2.start, s2 = t2.className, u2 = g(t2, ["children", "size", "circle", "center", "end", "start", "className"]), m2 = clsx_m_default("pagination", o2 && "justify-content-center", l2 && "pagination-circle", c2 && "justify-content-end", r2 && "pagination-".concat(r2), i2 && "justify-content-start", s2);
  return import_react.default.createElement("ul", v({ className: m2 }, u2, { ref: n2 }), a2);
});
var _ = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.className, l2 = t2.tag, o2 = g(t2, ["children", "className", "tag"]), c2 = clsx_m_default("page-link", r2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), a2);
});
_.defaultProps = { tag: "a" };
var ee = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.children, r2 = t2.className, l2 = t2.active, o2 = t2.disabled, c2 = g(t2, ["children", "className", "active", "disabled"]), i2 = clsx_m_default("page-item", l2 && "active", o2 && "disabled", r2);
  return import_react.default.createElement("li", v({ className: i2 }, c2, { ref: n2 }), a2);
});
var te = function(t2) {
  var n2 = t2.className, a2 = t2.classNameResponsive, r2 = t2.responsive, o2 = t2.align, c2 = t2.borderColor, i2 = t2.bordered, s2 = t2.borderless, u2 = t2.children, m2 = t2.color, f = t2.hover, p = t2.small, h2 = t2.striped, b2 = g(t2, ["className", "classNameResponsive", "responsive", "align", "borderColor", "bordered", "borderless", "children", "color", "hover", "small", "striped"]), N2 = clsx_m_default("table", o2 && "align-".concat(o2), c2 && "border-".concat(c2), i2 && "table-bordered", s2 && "table-borderless", m2 && "table-".concat(m2), f && "table-hover", p && "table-sm", h2 && "table-striped", n2), w2 = (0, import_react.useMemo)(function() {
    return import_react.default.createElement("table", v({ className: N2 }, b2), u2);
  }, [u2, N2, b2]);
  if (r2) {
    var y2 = clsx_m_default("string" == typeof r2 ? "table-responsive-".concat(r2) : "table-responsive", a2);
    return import_react.default.createElement("div", { className: y2 }, w2);
  }
  return w2;
};
var ne = function(t2) {
  var n2 = t2.className, a2 = t2.children, r2 = t2.dark, l2 = t2.light, o2 = g(t2, ["className", "children", "dark", "light"]), c2 = clsx_m_default(r2 && "table-dark", l2 && "table-light", n2);
  return import_react.default.createElement("thead", v({ className: c2 }, o2), a2);
};
var ae = function(t2) {
  var n2 = t2.className, a2 = t2.children, r2 = g(t2, ["className", "children"]), l2 = clsx_m_default(n2);
  return import_react.default.createElement("tbody", v({ className: l2 }, r2), a2);
};
var re = import_react.default.forwardRef(function(t2, n2) {
  var a2, r2 = t2.animated, l2 = t2.children, o2 = t2.className, c2 = t2.style, i2 = t2.tag, s2 = t2.valuenow, u2 = t2.valuemax, m2 = t2.striped, f = t2.bgColor, p = t2.valuemin, h2 = t2.width, b2 = g(t2, ["animated", "children", "className", "style", "tag", "valuenow", "valuemax", "striped", "bgColor", "valuemin", "width"]), N2 = clsx_m_default("progress-bar", f && "bg-".concat(f), m2 && "progress-bar-striped", r2 && "progress-bar-animated", o2), w2 = v({ width: "".concat(h2, "%") }, c2);
  return import_react.default.createElement(i2, v({ className: N2, style: w2, ref: n2, role: "progressbar" }, b2, { "aria-valuenow": null !== (a2 = Number(h2)) && void 0 !== a2 ? a2 : s2, "aria-valuemin": Number(p), "aria-valuemax": Number(u2) }), l2);
});
re.defaultProps = { tag: "div" };
var le = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = t2.height, c2 = t2.style, i2 = g(t2, ["className", "children", "tag", "height", "style"]), s2 = clsx_m_default("progress", a2), u2 = v({ height: "".concat(o2, "px") }, c2);
  return import_react.default.createElement(l2, v({ className: s2, ref: n2, style: u2 }, i2), import_react.default.Children.map(r2, function(t3) {
    return import_react.default.isValidElement(t3) && t3.type === re ? t3 : void console.error("Progress component only allows ProgressBar as child");
  }));
});
le.defaultProps = { tag: "div" };
var oe = function(l2) {
  var o2, c2 = l2.className, i2 = l2.size, s2 = l2.contrast, u2 = l2.value, m2 = l2.defaultValue, f = l2.id, p = l2.labelClass, h2 = l2.wrapperClass, b2 = l2.wrapperStyle, N2 = l2.wrapperTag, w2 = l2.label, y2 = l2.onChange, E2 = l2.children, k2 = l2.labelRef, x2 = l2.labelStyle, C2 = l2.inputRef, T2 = l2.type, R2 = l2.onBlur, S2 = l2.readonly, P2 = g(l2, ["className", "size", "contrast", "value", "defaultValue", "id", "labelClass", "wrapperClass", "wrapperStyle", "wrapperTag", "label", "onChange", "children", "labelRef", "labelStyle", "inputRef", "type", "onBlur", "readonly"]), L2 = (0, import_react.useState)(u2 || m2), I2 = L2[0], O2 = L2[1], A2 = (0, import_react.useState)(0), z2 = A2[0], F2 = A2[1], M2 = (0, import_react.useState)(false), H2 = M2[0], B2 = M2[1], D2 = (0, import_react.useRef)(null), j2 = (0, import_react.useRef)(null), W2 = k2 || D2, V2 = C2 || j2, Y2 = clsx_m_default("form-outline", s2 && "form-white", h2), q2 = clsx_m_default("form-control", H2 && "active", "date" === T2 && "active", i2 && "form-control-".concat(i2), c2), X2 = clsx_m_default("form-label", p);
  (0, import_react.useEffect)(function() {
    void 0 !== u2 && (u2.toString().length > 0 ? B2(true) : B2(false));
  }, [u2]), (0, import_react.useEffect)(function() {
    void 0 !== m2 && (m2.toString().length > 0 ? B2(true) : B2(false));
  }, [m2]);
  var U2 = (0, import_react.useCallback)(function() {
    var e2;
    (null === (e2 = W2.current) || void 0 === e2 ? void 0 : e2.clientWidth) && F2(0.8 * W2.current.clientWidth + 8);
  }, [W2]);
  (0, import_react.useEffect)(function() {
    U2();
  }, [null === (o2 = W2.current) || void 0 === o2 ? void 0 : o2.clientWidth, U2]);
  var G2 = (0, import_react.useCallback)(function(e2) {
    void 0 !== I2 && I2.toString().length > 0 || void 0 !== u2 && u2.toString().length > 0 ? B2(true) : B2(false), R2 && R2(e2);
  }, [I2, u2, R2]);
  return import_react.default.createElement(N2, { className: Y2, style: b2 }, import_react.default.createElement("input", v({ type: T2, readOnly: S2, className: q2, onBlur: G2, onChange: function(e2) {
    O2(e2.target.value), null == y2 || y2(e2);
  }, onFocus: U2, value: u2, defaultValue: m2, id: f, ref: V2 }, P2)), w2 && import_react.default.createElement("label", { className: X2, style: x2, htmlFor: f, ref: W2 }, w2), import_react.default.createElement("div", { className: "form-notch" }, import_react.default.createElement("div", { className: "form-notch-leading" }), import_react.default.createElement("div", { className: "form-notch-middle", style: { width: z2 } }), import_react.default.createElement("div", { className: "form-notch-trailing" })), E2);
};
oe.defaultProps = { wrapperTag: "div", readonly: false };
var ce = function(t2) {
  var n2 = t2.className, a2 = t2.inputRef, r2 = t2.labelClass, l2 = t2.wrapperClass, o2 = t2.labelStyle, c2 = t2.wrapperTag, i2 = t2.wrapperStyle, s2 = t2.label, u2 = t2.inline, m2 = t2.btn, f = t2.id, p = t2.btnColor, h2 = t2.disableWrapper, b2 = t2.toggleSwitch, N2 = g(t2, ["className", "inputRef", "labelClass", "wrapperClass", "labelStyle", "wrapperTag", "wrapperStyle", "label", "inline", "btn", "id", "btnColor", "disableWrapper", "toggleSwitch"]), w2 = "form-check-input", y2 = "form-check-label";
  m2 && (w2 = "btn-check", y2 = p ? "btn btn-".concat(p) : "btn btn-primary");
  var E2 = clsx_m_default(s2 && !m2 && "form-check", u2 && !m2 && "form-check-inline", b2 && "form-switch", l2), k2 = clsx_m_default(w2, n2), x2 = clsx_m_default(y2, r2), C2 = import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("input", v({ className: k2, id: f, ref: a2 }, N2)), s2 && import_react.default.createElement("label", { className: x2, style: o2, htmlFor: f }, s2));
  return import_react.default.createElement(import_react.default.Fragment, null, h2 ? C2 : import_react.default.createElement(c2, { style: i2, className: E2 }, C2));
};
ce.defaultProps = { wrapperTag: "div" };
var ie = function(t2) {
  var n2 = g(t2, []);
  return import_react.default.createElement(ce, v({ type: "checkbox" }, n2));
};
var se = function(t2) {
  var n2 = g(t2, []);
  return import_react.default.createElement(ce, v({ type: "radio" }, n2));
};
var de = function(t2) {
  var r2 = t2.className, l2 = t2.children, o2 = t2.show, c2 = t2.id, i2 = t2.navbar, s2 = t2.tag, u2 = t2.collapseRef, m2 = g(t2, ["className", "children", "show", "id", "navbar", "tag", "collapseRef"]), f = clsx_m_default("collapse", i2 && "navbar-collapse", r2), p = (0, import_react.useRef)(null), h2 = (0, import_react.useRef)(o2), b2 = null != u2 ? u2 : p;
  return (0, import_react.useEffect)(function() {
    var e2;
    if (h2.current && o2)
      return h2.current = false, void (null === (e2 = null == b2 ? void 0 : b2.current) || void 0 === e2 || e2.classList.add("show"));
  }, [b2, o2]), (0, import_react.useEffect)(function() {
    var e2 = b2.current;
    if (e2 && !h2.current) {
      var t3 = function() {
        e2.classList.toggle("collapsing"), e2.classList.toggle("collapse");
      };
      o2 ? (t3(), e2.style.height = "".concat(e2.scrollHeight, "px"), setTimeout(function() {
        t3(), e2.classList.toggle("show"), e2.style.height = "";
      }, 350)) : (e2.style.height = "".concat(e2.scrollHeight, "px"), setTimeout(function() {
        t3(), e2.style.height = "", e2.classList.toggle("show");
      }), setTimeout(function() {
        t3();
      }, 350));
    }
  }, [o2, b2]), import_react.default.createElement(s2, v({ id: c2, className: f }, m2, { ref: b2 }), l2);
};
de.defaultProps = { tag: "div" };
var ue = (0, import_react.createContext)(null);
var me = function(n2) {
  var a2 = n2.children, r2 = n2.isOpen, l2 = void 0 !== r2 && r2, o2 = n2.options, c2 = n2.animation, i2 = void 0 === c2 || c2, s2 = n2.dropup, d = n2.dropright, u2 = n2.dropleft, m2 = n2.onHide, g2 = n2.onShow, h2 = (0, import_react.useState)(l2), b2 = h2[0], N2 = h2[1], w2 = (0, import_react.useState)(null), y2 = w2[0], E2 = w2[1], k2 = (0, import_react.useState)(null), x2 = k2[0], C2 = k2[1], T2 = (0, import_react.useState)(-1), R2 = T2[0], S2 = T2[1], P2 = usePopper(y2, x2, v({ placement: s2 ? "top-start" : d ? "right-start" : u2 ? "left-start" : "bottom-start", modifiers: [flip_default] }, o2)).styles;
  return import_react.default.createElement(ue.Provider, { value: { animation: i2, activeIndex: R2, isOpenState: b2, setReferenceElement: E2, setPopperElement: C2, setActiveIndex: S2, popperElement: x2, styles: P2, setIsOpenState: N2, referenceElement: y2, onHide: m2, onShow: g2 } }, a2);
};
var fe = function() {
  var e2 = (0, import_react.useContext)(ue);
  if (!e2)
    throw new Error("Missing context data");
  return e2;
};
var pe = function() {
  var e2 = fe(), t2 = e2.isOpenState, a2 = e2.setIsOpenState, l2 = e2.setActiveIndex, o2 = e2.popperElement, c2 = e2.referenceElement, i2 = e2.onHide, s2 = (0, import_react.useCallback)(function(e3) {
    var n2 = e3.target;
    !t2 || !function(e4) {
      return e4 instanceof Node;
    }(n2) || o2 && o2.contains(n2) || c2 && c2.contains(n2) || (a2(false), null == i2 || i2(), setTimeout(function() {
      return l2(-1);
    }, 300));
  }, [t2, a2, l2, o2, c2, i2]);
  (0, import_react.useEffect)(function() {
    return document.addEventListener("mousedown", s2), function() {
      return document.removeEventListener("mousedown", s2);
    };
  }, [s2]);
};
var ve = function(t2) {
  var n2 = t2.className, a2 = t2.tag, r2 = void 0 === a2 ? "div" : a2, l2 = t2.group, o2 = t2.children, c2 = t2.dropup, i2 = t2.dropright, s2 = t2.dropleft, u2 = g(t2, ["className", "tag", "group", "children", "dropup", "dropright", "dropleft"]);
  pe();
  var m2 = clsx_m_default(l2 ? "btn-group" : "dropdown", c2 && "dropup", i2 && "dropend", s2 && "dropstart", n2);
  return import_react.default.createElement(r2, v({ className: m2 }, u2), o2);
};
var ge = function(t2) {
  var n2 = t2.animation, a2 = t2.onHide, r2 = t2.onShow, l2 = g(t2, ["animation", "onHide", "onShow"]);
  return import_react.default.createElement(me, v({ animation: n2, onHide: a2, onShow: r2 }, l2), import_react.default.createElement(ve, v({}, l2)));
};
var he = function(t2) {
  var n2 = t2.childTag, a2 = t2.children, r2 = t2.disabled, l2 = t2.link, o2 = t2.divider, c2 = t2.header, i2 = t2.href, s2 = void 0 === i2 ? "#" : i2, u2 = clsx_m_default("dropdown-item", r2 && "disabled");
  return l2 ? n2 ? import_react.default.createElement(n2, { className: u2 }, a2) : import_react.default.createElement("a", { href: s2, className: u2 }, a2) : o2 ? n2 ? import_react.default.createElement(n2, { className: "dropdown-divider" }, a2) : import_react.default.createElement("hr", { className: "dropdown-divider" }) : c2 ? n2 ? import_react.default.createElement(n2, { className: "dropdown-header" }, a2) : import_react.default.createElement("h6", { className: "dropdown-header" }, a2) : null;
};
function be(e2, t2) {
  void 0 === t2 && (t2 = {});
  var n2 = t2.insertAt;
  if (e2 && "undefined" != typeof document) {
    var a2 = document.head || document.getElementsByTagName("head")[0], r2 = document.createElement("style");
    r2.type = "text/css", "top" === n2 && a2.firstChild ? a2.insertBefore(r2, a2.firstChild) : a2.appendChild(r2), r2.styleSheet ? r2.styleSheet.cssText = e2 : r2.appendChild(document.createTextNode(e2));
  }
}
be(".dropdown-menu .active {\n  color: #16181b;\n  background-color: #eee;\n}\n");
var Ne = function(t2) {
  var n2 = t2.onClick, a2 = t2.tag, r2 = void 0 === a2 ? "li" : a2, l2 = t2.childTag, o2 = t2.children, c2 = t2.style, i2 = t2.link, s2 = t2.divider, d = t2.header, u2 = t2.disabled, m2 = t2.href, f = g(t2, ["onClick", "tag", "childTag", "children", "style", "link", "divider", "header", "disabled", "href"]), p = fe(), h2 = p.setIsOpenState, b2 = p.onHide;
  return import_react.default.createElement(r2, v({ style: c2, onClick: function(e2) {
    u2 || (null == b2 || b2(), h2(false), null == n2 || n2(e2));
  } }, f), import_react.default.createElement(he, { link: i2, divider: s2, header: d, disabled: u2, href: m2, childTag: l2, children: o2 }));
};
var we = function(e2, t2, n2) {
  return "up" === n2 ? e2 <= 0 ? true === t2[t2.length - 1].props.divider || true === t2[t2.length - 1].props.disabled : true === t2[e2 - 1].props.divider || true === t2[e2 - 1].props.disabled : e2 === t2.length - 1 ? true === t2[0].props.divider || true === t2[0].props.disabled : true === t2[e2 + 1].props.divider || true === t2[e2 + 1].props.disabled;
};
var ye = function(e2) {
  var t2 = fe(), a2 = t2.activeIndex, l2 = t2.isOpenState, o2 = t2.setIsOpenState, c2 = t2.setActiveIndex, i2 = t2.onHide, s2 = (0, import_react.useCallback)(function(t3) {
    if (Array.isArray(e2)) {
      if (function(e3) {
        return e3 instanceof HTMLElement;
      }(document.activeElement) && document.activeElement.blur(), "ArrowUp" === t3.key) {
        t3.preventDefault();
        var n2 = we(a2, e2, "up");
        if (1 === a2)
          return void c2(n2 ? e2.length - 1 : 0);
        if (a2 <= 0)
          return void c2(n2 ? e2.length - 2 : e2.length - 1);
        c2(function(e3) {
          return n2 ? e3 - 2 : e3 - 1;
        });
      }
      if ("ArrowDown" === t3.key || "Tab" === t3.key) {
        t3.preventDefault();
        var r2 = we(a2, e2, "down");
        if (a2 === e2.length - 2)
          return void c2(function(e3) {
            return r2 ? 0 : e3 + 1;
          });
        if (a2 === e2.length - 1)
          return void c2(r2 ? 1 : 0);
        c2(function(e3) {
          return r2 ? e3 + 2 : e3 + 1;
        });
      }
      if ("Enter" === t3.key) {
        var l3 = document.querySelector('[data-active="true"]'), s3 = null == l3 ? void 0 : l3.firstElementChild;
        null == s3 || s3.click(), o2(false), setTimeout(function() {
          return c2(-1);
        }, 300);
      }
      "Escape" === t3.key && (o2(false), null == i2 || i2(), setTimeout(function() {
        return c2(-1);
      }, 300));
    }
  }, [e2, o2, c2, a2, i2]);
  (0, import_react.useEffect)(function() {
    return l2 && document.addEventListener("keydown", s2), function() {
      l2 && document.removeEventListener("keydown", s2);
    };
  }, [l2, s2]), (0, import_react.useEffect)(function() {
    var e3 = document.querySelector('[data-active="true"]'), t3 = null == e3 ? void 0 : e3.firstElementChild;
    return null == t3 || t3.focus(), function() {
      return null == t3 ? void 0 : t3.blur();
    };
  }, [a2]);
};
be(".dropdown-menu [data-active='true'] a.dropdown-item,\n.dropdown-menu .dropdown-item:focus,\n.dropdown-menu li:focus .dropdown-item :not(.disabled) {\n  color: #16181b;\n  background-color: #eee;\n}\n\n.dropdown-menu li:focus {\n  outline: none;\n}\n\n.dropdown-menu.dropdown-menu-dark [data-active='true'] a.dropdown-item,\n.dropdown-menu.dropdown-menu-dark .dropdown-item:focus,\n.dropdown-menu.dropdown-menu-dark li:focus .dropdown-item {\n  color: #fff;\n  background-color: #1266f1;\n}\n\n.btn-group.dropstart > .dropdown-menu {\n  right: 0 !important;\n}\n");
var Ee = function(a2) {
  var r2 = a2.className, l2 = a2.tag, o2 = void 0 === l2 ? "ul" : l2, c2 = a2.children, u2 = a2.style, f = a2.dark, p = a2.responsive, h2 = void 0 === p ? "" : p, b2 = a2.appendToBody, N2 = void 0 !== b2 && b2, w2 = a2.alwaysOpen, y2 = g(a2, ["className", "tag", "children", "style", "dark", "responsive", "appendToBody", "alwaysOpen"]), E2 = fe(), k2 = E2.activeIndex, x2 = E2.setPopperElement, C2 = E2.isOpenState, T2 = E2.animation, R2 = E2.styles, S2 = function() {
    var e2 = fe().isOpenState, a3 = (0, import_react.useState)(false), r3 = a3[0], l3 = a3[1], o3 = (0, import_react.useState)(false), c3 = o3[0], i2 = o3[1], s2 = (0, import_react.useState)(e2), d = s2[0], u3 = s2[1];
    return (0, import_react.useEffect)(function() {
      var t2;
      return e2 || (i2(true), l3(false), t2 = setTimeout(function() {
        i2(false), u3(false);
      }, 300)), e2 && (l3(true), i2(false), u3(true), t2 = setTimeout(function() {
        l3(false);
      }, 300)), function() {
        return clearTimeout(t2);
      };
    }, [e2]), { show: d, isFadeIn: r3, isFadeOut: c3 };
  }(), P2 = S2.show, L2 = S2.isFadeIn, I2 = S2.isFadeOut;
  ye(c2);
  var O2 = clsx_m_default("dropdown-menu", f && "dropdown-menu-dark", C2 && "show", T2 && "animation", L2 && "fade-in", I2 && "fade-out", h2 && "dropdown-menu-".concat(h2), r2);
  if (!P2 && !w2)
    return null;
  var A2 = import_react.default.createElement(o2, v({ className: O2, style: v(v({ position: "absolute", zIndex: 1e3 }, R2.popper), u2), ref: x2 }, y2), import_react.Children.map(c2, function(e2, t2) {
    return (0, import_react.cloneElement)(e2, { tabIndex: 1, "data-active": k2 === t2 && true, className: clsx_m_default(k2 === t2 ? "active" : "", e2.props.className) });
  }));
  return import_react.default.createElement(import_react.default.Fragment, null, N2 ? (0, import_react_dom.createPortal)(A2, document.body) : A2);
};
var ke = function(t2) {
  var n2 = t2.className, a2 = t2.tag, r2 = void 0 === a2 ? k : a2, l2 = t2.children, o2 = t2.onClick, c2 = t2.split, i2 = g(t2, ["className", "tag", "children", "onClick", "split"]), s2 = fe(), u2 = s2.setIsOpenState, m2 = s2.setReferenceElement, f = s2.isOpenState, p = s2.setActiveIndex, h2 = s2.onHide, b2 = s2.onShow, N2 = clsx_m_default("dropdown-toggle", c2 && "dropdown-toggle-split", n2);
  return import_react.default.createElement(r2, v({ onClick: function(e2) {
    f ? null == h2 || h2() : null == b2 || b2(), u2(function(e3) {
      return !e3;
    }), null == o2 || o2(e2), setTimeout(function() {
      return p(-1);
    }, 300);
  }, ref: m2, className: N2, "aria-expanded": !!f }, i2), l2);
};
var xe = function(a2) {
  var l2 = a2.className, o2 = a2.btnClassName, c2 = a2.btnChildren, i2 = a2.children, s2 = a2.tag, m2 = a2.onShow, p = a2.onHide, h2 = a2.popperTag, b2 = a2.isOpen, N2 = a2.placement, w2 = a2.dismiss, y2 = a2.options, E2 = a2.poperStyle, k2 = a2.onClick, x2 = g(a2, ["className", "btnClassName", "btnChildren", "children", "tag", "onShow", "onHide", "popperTag", "isOpen", "placement", "dismiss", "options", "poperStyle", "onClick"]), C2 = (0, import_react.useState)(), T2 = C2[0], R2 = C2[1], S2 = (0, import_react.useState)(), P2 = S2[0], L2 = S2[1], I2 = usePopper(T2, P2, v({ placement: N2 }, y2)), O2 = I2.styles, A2 = I2.attributes, z2 = (0, import_react.useState)(null != b2 && b2), F2 = z2[0], M2 = z2[1], H2 = (0, import_react.useState)(false), B2 = H2[0], D2 = H2[1], j2 = (0, import_react.useState)(false), W2 = j2[0], V2 = j2[1], Y2 = clsx_m_default("popover fade", B2 && F2 && "show", "bs-popover-".concat("left" === N2 ? "start" : "right" === N2 ? "end" : N2), l2);
  (0, import_react.useEffect)(function() {
    b2 || M2(false);
  }, [b2]);
  var q2 = (0, import_react.useCallback)(function(e2) {
    W2 && P2 && null !== P2 && F2 && T2 && null !== T2 && (T2.contains(e2.target) || (M2(false), null == p || p()));
  }, [W2, F2, P2, T2, p]);
  return (0, import_react.useEffect)(function() {
    var e2 = setTimeout(function() {
      D2(F2);
    }, 150);
    return function() {
      clearTimeout(e2);
    };
  }, [F2]), (0, import_react.useEffect)(function() {
    return F2 && document.addEventListener("mousedown", q2), function() {
      document.removeEventListener("mousedown", q2);
    };
  }, [q2, F2]), import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement(s2, v({ onClick: function(e2) {
    F2 && !w2 ? null == p || p() : F2 || null == m2 || m2(), w2 ? (V2(true), M2(true)) : M2(!F2), k2 && k2(e2);
  }, className: o2 }, x2, { ref: R2 }), c2), (B2 || F2) && import_react_dom.default.createPortal(import_react.default.createElement(h2, v({ className: Y2, ref: L2, style: v(v({}, O2.popper), E2) }, A2.popper), i2), document.body));
};
xe.defaultProps = { tag: k, popperTag: "div", placement: "bottom" };
var Ce = function(t2) {
  var n2 = t2.className, a2 = t2.children, r2 = t2.tag, l2 = g(t2, ["className", "children", "tag"]), o2 = clsx_m_default("popover-body", n2);
  return import_react.default.createElement(r2, v({ className: o2 }, l2), a2);
};
Ce.defaultProps = { tag: "div" };
var Te = function(t2) {
  var n2 = t2.className, a2 = t2.children, r2 = t2.tag, l2 = g(t2, ["className", "children", "tag"]), o2 = clsx_m_default("popover-header", n2);
  return import_react.default.createElement(r2, v({ className: o2 }, l2), a2);
};
Te.defaultProps = { tag: "h3" };
var Re = function(l2) {
  var o2 = l2.animationDirection, c2 = l2.appendToBody, i2 = l2.backdrop, s2 = void 0 === i2 || i2, m2 = l2.children, f = l2.className, p = l2.closeOnEsc, h2 = void 0 === p || p, b2 = l2.setShow, N2 = l2.leaveHiddenModal, w2 = void 0 === N2 || N2, y2 = l2.modalRef, E2 = l2.onHide, k2 = l2.onHidePrevented, x2 = l2.onShow, C2 = l2.show, T2 = l2.staticBackdrop, R2 = l2.nonInvasive, S2 = void 0 !== R2 && R2, P2 = l2.tag, L2 = void 0 === P2 ? "div" : P2, I2 = g(l2, ["animationDirection", "appendToBody", "backdrop", "children", "className", "closeOnEsc", "setShow", "leaveHiddenModal", "modalRef", "onHide", "onHidePrevented", "onShow", "show", "staticBackdrop", "nonInvasive", "tag"]), O2 = (0, import_react.useState)(C2), A2 = O2[0], z2 = O2[1], F2 = (0, import_react.useState)(C2), M2 = F2[0], H2 = F2[1], B2 = (0, import_react.useState)(C2), D2 = B2[0], j2 = B2[1], W2 = (0, import_react.useState)(false), V2 = W2[0], Y2 = W2[1], q2 = (0, import_react.useState)(0), X2 = q2[0], U2 = q2[1], G2 = (0, import_react.useState)([]), J2 = G2[0], K2 = G2[1], Q2 = (0, import_react.useRef)(null), Z2 = y2 || Q2, $2 = clsx_m_default("modal", V2 && "modal-static", o2, "fade", M2 && "show", A2 && S2 && "modal-non-invasive-show", f), _2 = clsx_m_default("modal-backdrop", "fade", A2 && "show"), ee2 = (0, import_react.useCallback)(function() {
    H2(false), M2 && (null == E2 || E2()), setTimeout(function() {
      z2(false), null == b2 || b2(false);
    }, 150), setTimeout(function() {
      j2(false);
    }, 350);
  }, [E2, b2]), te2 = (0, import_react.useCallback)(function(e2) {
    M2 && e2.target === Z2.current && (T2 ? (Y2(true), null == k2 || k2(), setTimeout(function() {
      Y2(false);
    }, 300)) : ee2());
  }, [M2, Z2, T2, ee2, k2]), ne2 = (0, import_react.useCallback)(function(e2) {
    M2 && "Tab" === e2.key && (e2.preventDefault(), U2(X2 + 1)), h2 && M2 && "Escape" === e2.key && (T2 ? (Y2(true), null == k2 || k2(), setTimeout(function() {
      Y2(false);
    }, 300)) : ee2());
  }, [M2, h2, X2, T2, ee2, k2]);
  (0, import_react.useEffect)(function() {
    var e2, t2 = null === (e2 = Z2.current) || void 0 === e2 ? void 0 : e2.querySelectorAll("button, a, input, select, textarea, [tabindex]"), n2 = Array.from(t2).filter(function(e3) {
      return -1 !== e3.tabIndex;
    }).sort(function(e3, t3) {
      return e3.tabIndex === t3.tabIndex ? 0 : null === t3.tabIndex ? -1 : null === e3.tabIndex ? 1 : e3.tabIndex - t3.tabIndex;
    });
    K2(n2), U2(n2.length - 1);
  }, [Z2]), (0, import_react.useEffect)(function() {
    J2 && J2.length > 0 && (X2 === J2.length ? (J2[0].focus(), U2(0)) : J2[X2].focus());
  }, [X2, J2]), (0, import_react.useEffect)(function() {
    var e2, t2 = window.innerWidth > document.documentElement.clientWidth && window.innerWidth >= 576;
    if (D2 && t2 && !S2) {
      var n2 = (e2 = document.documentElement.clientWidth, Math.abs(window.innerWidth - e2));
      document.body.classList.add("modal-open"), document.body.style.overflow = "hidden", document.body.style.paddingRight = "".concat(n2, "px");
    } else
      document.body.classList.remove("modal-open"), document.body.style.overflow = "", document.body.style.paddingRight = "";
    return function() {
      document.body.classList.remove("modal-open"), document.body.style.overflow = "", document.body.style.paddingRight = "";
    };
  }, [D2, S2]), (0, import_react.useEffect)(function() {
    C2 ? (null == x2 || x2(), j2(true), setTimeout(function() {
      z2(true);
    }, 0), setTimeout(function() {
      H2(true), null == b2 || b2(true);
    }, 150)) : ee2();
  }, [C2, ee2, b2, x2]), (0, import_react.useEffect)(function() {
    return S2 || (window.addEventListener("click", te2), window.addEventListener("keydown", ne2)), function() {
      window.removeEventListener("click", te2), window.removeEventListener("keydown", ne2);
    };
  }, [ne2, te2, S2]);
  var ae2 = import_react.default.createElement(import_react.default.Fragment, null, (w2 || C2 || D2) && import_react_dom.default.createPortal(import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement(L2, v({ className: $2, ref: Z2, style: { display: D2 || C2 ? "block" : "none", pointerEvents: S2 ? "none" : "initial" } }, I2), m2), import_react_dom.default.createPortal(s2 && D2 && !S2 && import_react.default.createElement("div", { className: _2 }), document.body)), document.body)), re2 = import_react.default.createElement(import_react.default.Fragment, null, (w2 || C2 || D2) && import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement(L2, v({ className: $2, ref: Z2, style: { display: D2 || C2 ? "block" : "none", pointerEvents: S2 ? "none" : "initial" } }, I2), m2), import_react_dom.default.createPortal(s2 && D2 && !S2 && import_react.default.createElement("div", { className: _2 }), document.body)));
  return import_react.default.createElement(import_react.default.Fragment, null, c2 ? ae2 : re2);
};
var Se = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.centered, l2 = t2.children, o2 = t2.size, c2 = t2.scrollable, i2 = t2.tag, s2 = g(t2, ["className", "centered", "children", "size", "scrollable", "tag"]), u2 = clsx_m_default("modal-dialog", c2 && "modal-dialog-scrollable", r2 && "modal-dialog-centered", o2 && "modal-".concat(o2), a2);
  return import_react.default.createElement(i2, v({ className: u2 }, s2, { ref: n2 }), l2);
});
Se.defaultProps = { tag: "div" };
var Pe = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("modal-content", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
Pe.defaultProps = { tag: "div" };
var Le = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("modal-header", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
Le.defaultProps = { tag: "div" };
var Ie = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("modal-title", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
Ie.defaultProps = { tag: "h5" };
var Oe = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("modal-body", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
Oe.defaultProps = { tag: "div" };
var Ae = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.tag, o2 = g(t2, ["className", "children", "tag"]), c2 = clsx_m_default("modal-footer", a2);
  return import_react.default.createElement(l2, v({ className: c2 }, o2, { ref: n2 }), r2);
});
Ae.defaultProps = { tag: "div" };
var ze = import_react.default.createContext({ activeElement: null, setTargets: null });
var Fe = function(a2) {
  var l2 = a2.container, o2 = void 0 === l2 ? void 0 !== typeof window ? window : null : l2, c2 = a2.className, i2 = a2.children, s2 = a2.offset, u2 = void 0 === s2 ? 10 : s2, m2 = g(a2, ["container", "className", "children", "offset"]), f = clsx_m_default("sticky-top", c2), p = (0, import_react.useState)(null), h2 = p[0], b2 = p[1], N2 = (0, import_react.useState)([]), w2 = N2[0], y2 = N2[1], E2 = o2 instanceof Window, k2 = (0, import_react.useCallback)(function() {
    var e2, t2, n2;
    if (w2.length) {
      var a3 = E2 ? window.pageYOffset : null === (e2 = null == o2 ? void 0 : o2.current) || void 0 === e2 ? void 0 : e2.scrollTop, r2 = Number(u2), l3 = null === (t2 = w2[w2.length - 1]) || void 0 === t2 ? void 0 : t2.current, c3 = null === (n2 = w2[0]) || void 0 === n2 ? void 0 : n2.current;
      a3 + r2 < c3.offsetTop && b2(null), w2.forEach(function(e3, t3) {
        var n3, l4 = null === (n3 = w2[t3 + 1]) || void 0 === n3 ? void 0 : n3.current, o3 = e3.current;
        a3 > o3.offsetTop - r2 && a3 < (null == l4 ? void 0 : l4.offsetTop) - r2 && b2(o3);
      }), a3 > l3.offsetTop - r2 && b2(l3);
    }
  }, [u2, w2, E2, o2]);
  return (0, import_react.useEffect)(function() {
    var e2 = E2 ? o2 : null == o2 ? void 0 : o2.current;
    return k2(), null == e2 || e2.addEventListener("scroll", k2), function() {
      null == e2 || e2.removeEventListener("scroll", k2);
    };
  }, [k2, o2, E2]), import_react.default.createElement("div", v({ className: f }, m2), import_react.default.createElement("ul", { className: "nav flex-column nav-pills menu-sidebar" }, import_react.default.createElement(ze.Provider, { value: { activeElement: h2, setTargets: y2 } }, i2)));
};
var Me = function(t2) {
  var a2, r2 = t2.className, l2 = t2.collapsible, o2 = t2.targetRef, i2 = t2.children, s2 = t2.subsections, u2 = t2.onClick, m2 = t2.onActivate, f = g(t2, ["className", "collapsible", "targetRef", "children", "subsections", "onClick", "onActivate"]), p = (0, import_react.useContext)(ze), b2 = p.activeElement, N2 = p.setTargets, w2 = (null == b2 ? void 0 : b2.id) === (null === (a2 = o2.current) || void 0 === a2 ? void 0 : a2.id), y2 = w2 || (null == s2 ? void 0 : s2.some(function(e2) {
    return e2.current.id === (null == b2 ? void 0 : b2.id);
  }));
  w2 && (null == m2 || m2(null == b2 ? void 0 : b2.id));
  var E2 = clsx_m_default("nav-link", l2 && "collapsible-scrollspy", y2 && "active", r2);
  return (0, import_react.useEffect)(function() {
    N2(function(e2) {
      return h(h([], e2), [o2]);
    });
  }, [N2, o2]), import_react.default.createElement("li", { className: "nav-item", style: { cursor: "pointer" } }, import_react.default.createElement("a", v({ className: E2, onClick: function(e2) {
    var t3 = null == o2 ? void 0 : o2.current;
    null == t3 || t3.scrollIntoView({ behavior: "smooth" }), null == u2 || u2(e2);
  } }, f), i2));
};
Me.defaultProps = {};
var He = function(r2) {
  var l2 = r2.collapsible, o2 = r2.className, i2 = r2.children, s2 = r2.style, u2 = g(r2, ["collapsible", "className", "children", "style"]), m2 = (0, import_react.useState)("0px"), f = m2[0], p = m2[1], h2 = (0, import_react.useContext)(ze).activeElement, b2 = clsx_m_default("nav flex-column", o2), N2 = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(function() {
    var e2 = N2.current;
    (null == l2 ? void 0 : l2.some(function(e3) {
      return e3.current.id === (null == h2 ? void 0 : h2.id);
    })) ? p("".concat(null == e2 ? void 0 : e2.scrollHeight, "px")) : p("0px");
  }, [h2, l2]);
  var w2 = v({ overflow: "hidden", height: f, transition: "height .5s ease", flexWrap: "nowrap" }, s2);
  return import_react.default.createElement("ul", v({ className: b2, ref: N2, style: l2 ? w2 : s2 }, u2), i2);
};
He.defaultProps = {};
var Be = function(t2) {
  var n2 = g(t2, []);
  return import_react.default.createElement(ce, v({ type: "checkbox", toggleSwitch: true }, n2));
};
var De = function(a2) {
  var r2 = a2.value, l2 = a2.min, o2 = a2.max, c2 = a2.showThumb, i2 = Number(r2), s2 = (0, import_react.useState)(100 * (i2 || 0 - Number(l2)) / (Number(o2) - Number(l2))), u2 = s2[0], m2 = s2[1], f = clsx_m_default("thumb", c2 && "thumb-active");
  return (0, import_react.useEffect)(function() {
    m2(100 * (Number(r2) - Number(l2)) / (Number(o2) - Number(l2)));
  }, [r2, o2, l2]), import_react.default.createElement("span", { className: f, style: { left: "calc(".concat(u2, "% + (").concat(8 - 0.15 * u2, "px))") } }, import_react.default.createElement("span", { className: "thumb-value" }, r2));
};
De.defaultProps = { min: "0", max: "100" };
var je = function(n2) {
  var a2 = n2.className, r2 = n2.defaultValue, l2 = n2.disableTooltip, o2 = n2.labelId, c2 = n2.max, i2 = n2.min, s2 = n2.onMouseDown, u2 = n2.onMouseUp, m2 = n2.onTouchStart, f = n2.onTouchEnd, p = n2.onChange, h2 = n2.labelClass, b2 = n2.value, N2 = n2.label, w2 = n2.id, y2 = n2.inputRef, E2 = g(n2, ["className", "defaultValue", "disableTooltip", "labelId", "max", "min", "onMouseDown", "onMouseUp", "onTouchStart", "onTouchEnd", "onChange", "labelClass", "value", "label", "id", "inputRef"]), k2 = (0, import_react.useState)(r2), x2 = k2[0], C2 = k2[1], T2 = (0, import_react.useState)(false), R2 = T2[0], S2 = T2[1], P2 = clsx_m_default("form-range", a2), L2 = clsx_m_default("form-label", h2);
  return import_react.default.createElement(import_react.default.Fragment, null, N2 && import_react.default.createElement("label", { className: L2, id: o2, htmlFor: w2 }, N2), import_react.default.createElement("div", { className: "range" }, import_react.default.createElement("input", v({ type: "range", onMouseDown: function(e2) {
    S2(true), s2 && s2(e2);
  }, onMouseUp: function(e2) {
    S2(false), u2 && u2(e2);
  }, onTouchStart: function(e2) {
    S2(true), m2 && m2(e2);
  }, onTouchEnd: function(e2) {
    S2(false), f && f(e2);
  }, onChange: function(e2) {
    C2(e2.target.value), p && p(e2);
  }, className: P2, value: b2 || x2, id: w2, min: i2, max: c2, ref: y2 }, E2)), !l2 && import_react.default.createElement(De, { value: b2 || x2, showThumb: R2, min: i2, max: c2 })));
};
je.defaultProps = { defaultValue: 0 };
var We = function(t2) {
  var n2 = t2.className, a2 = t2.labelClass, r2 = t2.labelStyle, l2 = t2.inputRef, o2 = t2.size, c2 = t2.label, i2 = t2.id, s2 = g(t2, ["className", "labelClass", "labelStyle", "inputRef", "size", "label", "id"]), u2 = clsx_m_default("form-control", "form-control-".concat(o2), n2), m2 = clsx_m_default("form-label", a2);
  return import_react.default.createElement(import_react.default.Fragment, null, c2 && import_react.default.createElement("label", { className: m2, style: r2, htmlFor: i2 }, c2), import_react.default.createElement("input", v({ className: u2, type: "file", id: i2, ref: l2 }, s2)));
};
var Ve = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.noBorder, o2 = t2.textBefore, c2 = t2.textAfter, i2 = t2.noWrap, s2 = t2.tag, u2 = t2.textTag, m2 = t2.textClass, f = t2.size, p = t2.textProps, h2 = g(t2, ["className", "children", "noBorder", "textBefore", "textAfter", "noWrap", "tag", "textTag", "textClass", "size", "textProps"]), b2 = clsx_m_default("input-group", i2 && "flex-nowrap", f && "input-group-".concat(f), a2), N2 = clsx_m_default("input-group-text", l2 && "border-0", m2), w2 = function(t3) {
    return import_react.default.createElement(import_react.default.Fragment, null, t3 && Array.isArray(t3) ? t3.map(function(t4, n3) {
      return import_react.default.createElement(u2, v({ key: n3, className: N2 }, p), t4);
    }) : import_react.default.createElement(u2, v({ className: N2 }, p), t3));
  };
  return import_react.default.createElement(s2, v({ className: b2, ref: n2 }, h2), o2 && w2(o2), r2, c2 && w2(c2));
});
Ve.defaultProps = { tag: "div", textTag: "span" };
var Ye = import_react.default.forwardRef(function(n2, a2) {
  var r2 = n2.className, l2 = n2.children, o2 = n2.isValidated, c2 = n2.onReset, i2 = n2.onSubmit, s2 = g(n2, ["className", "children", "isValidated", "onReset", "onSubmit"]), u2 = (0, import_react.useState)(o2), m2 = u2[0], f = u2[1], p = clsx_m_default("needs-validation", m2 && "was-validated", r2);
  return import_react.default.createElement("form", v({ className: p, onSubmit: function(e2) {
    e2.preventDefault(), f(true), i2 && i2(e2);
  }, onReset: function(e2) {
    e2.preventDefault(), f(false), c2 && c2(e2);
  }, ref: a2 }, s2), l2);
});
Ye.defaultProps = { noValidate: true };
var qe = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.fill, l2 = t2.pills, o2 = t2.justify, c2 = t2.children, i2 = g(t2, ["className", "fill", "pills", "justify", "children"]), s2 = clsx_m_default("nav", l2 ? "nav-pills" : "nav-tabs", r2 && "nav-fill", o2 && "nav-justified", a2);
  return import_react.default.createElement("ul", v({ className: s2, ref: n2 }, i2), c2);
});
var Xe = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.children, l2 = t2.style, o2 = g(t2, ["className", "children", "style"]), c2 = clsx_m_default("nav-item", a2);
  return import_react.default.createElement("li", v({ className: c2, style: v({ cursor: "pointer" }, l2), role: "presentation", ref: n2 }, o2), r2);
});
var Ue = import_react.default.forwardRef(function(t2, a2) {
  var r2 = t2.className, l2 = t2.color, o2 = t2.active, c2 = t2.onShow, i2 = t2.onHide, s2 = t2.children, u2 = g(t2, ["className", "color", "active", "onShow", "onHide", "children"]), m2 = clsx_m_default("nav-link", o2 && "active", l2 && "bg-".concat(l2), r2);
  return (0, import_react.useEffect)(function() {
    o2 ? null == c2 || c2() : null == i2 || i2();
  }, [o2]), import_react.default.createElement("a", v({ className: m2, ref: a2 }, u2), s2);
});
var Ge = import_react.default.forwardRef(function(t2, n2) {
  var a2 = t2.className, r2 = t2.tag, l2 = t2.children, o2 = g(t2, ["className", "tag", "children"]), c2 = clsx_m_default("tab-content", a2);
  return import_react.default.createElement(r2, v({ className: c2, ref: n2 }, o2), l2);
});
Ge.defaultProps = { tag: "div" };
var Je = import_react.default.forwardRef(function(a2, r2) {
  var l2 = a2.className, o2 = a2.tag, c2 = a2.show, i2 = a2.children, s2 = g(a2, ["className", "tag", "show", "children"]), u2 = (0, import_react.useState)(false), m2 = u2[0], f = u2[1], p = clsx_m_default("tab-pane", "fade", m2 && "show", c2 && "active", l2);
  return (0, import_react.useEffect)(function() {
    var e2;
    return c2 ? e2 = setTimeout(function() {
      f(true);
    }, 100) : f(false), function() {
      clearTimeout(e2);
    };
  }, [c2]), import_react.default.createElement(o2, v({ className: p, role: "tabpanel", ref: r2 }, s2), i2);
});
Je.defaultProps = { tag: "div" };
var Ke = (0, import_react.createContext)({ active: 0 });
var Qe = function(t2) {
  var n2 = t2.imagesCount, a2 = t2.to, r2 = (0, import_react.useContext)(Ke).active;
  return import_react.default.createElement("ol", { className: "carousel-indicators" }, Array.from(Array(n2)).map(function(t3, n3) {
    return import_react.default.createElement("li", { "data-mdb-target": n3, key: n3, className: clsx_m_default(r2 === n3 && "active"), onClick: function() {
      return a2(n3);
    } });
  }));
};
var Ze = function(t2) {
  var n2 = t2.move;
  return import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("a", { role: "button", className: "carousel-control-prev", onClick: function() {
    return n2("prev");
  } }, import_react.default.createElement("span", { className: "carousel-control-prev-icon" }), import_react.default.createElement("span", { className: "visually-hidden" }, "Previous")), import_react.default.createElement("a", { role: "button", className: "carousel-control-next", onClick: function() {
    return n2("next");
  } }, import_react.default.createElement("span", { className: "carousel-control-next-icon" }), import_react.default.createElement("span", { className: "visually-hidden" }, "Next")));
};
var $e = function(e2) {
  "function" == typeof e2 && e2();
};
var _e = function(e2) {
  if (!e2)
    return 0;
  var t2 = window.getComputedStyle(e2), n2 = t2.transitionDuration, a2 = t2.transitionDelay, r2 = Number.parseFloat(n2), l2 = Number.parseFloat(a2);
  return r2 || l2 ? (n2 = n2.split(",")[0], a2 = a2.split(",")[0], 1e3 * (Number.parseFloat(n2) + Number.parseFloat(a2))) : 0;
};
var et = function(e2, t2) {
  var n2 = false, a2 = t2 + 5;
  e2.addEventListener("transitionend", function t3() {
    n2 = true, e2.removeEventListener("transitionend", t3);
  }), setTimeout(function() {
    n2 || function(e3) {
      e3.dispatchEvent(new Event("transitionend"));
    }(e2);
  }, a2);
};
var tt = function(l2) {
  var o2 = l2.fade, c2 = l2.className, i2 = l2.dark, s2 = l2.children, u2 = l2.interval, m2 = l2.keyboard, f = l2.touch, p = l2.showControls, h2 = l2.showIndicators, b2 = l2.onSlide, N2 = g(l2, ["fade", "className", "dark", "children", "interval", "keyboard", "touch", "showControls", "showIndicators", "onSlide"]), w2 = (0, import_react.useRef)([]), y2 = (0, import_react.useRef)(null), E2 = (0, import_react.useRef)(0), k2 = (0, import_react.useRef)(false), x2 = (0, import_react.useState)(0), C2 = x2[0], T2 = x2[1], R2 = (0, import_react.useState)(0), S2 = R2[0], P2 = R2[1], L2 = (0, import_react.useState)({ initialX: 0, initialY: 0 }), I2 = L2[0], O2 = L2[1], A2 = (0, import_react.useState)(false), z2 = A2[0], F2 = A2[1], M2 = (0, import_react.useRef)(null), H2 = clsx_m_default("carousel", "slide", o2 && "carousel-fade", i2 && "carousel-dark", c2), B2 = function() {
    y2.current && (clearInterval(y2.current), y2.current = null);
  }, D2 = (0, import_react.useCallback)(function(e2, t2) {
    if (void 0 !== t2)
      E2.current = t2, T2(t2);
    else {
      var n2 = C2 === S2 - 1 ? 0 : C2 + 1, a2 = 0 === C2 ? S2 - 1 : C2 - 1;
      E2.current = "next" === e2 ? n2 : a2, T2("next" === e2 ? n2 : a2);
    }
  }, [C2, S2]), j2 = (0, import_react.useCallback)(function(e2, t2, n2) {
    var a2;
    F2(true);
    var r2 = w2.current[C2], l3 = Boolean(y2.current), o3 = "next" === e2, c3 = o3 ? "carousel-item-start" : "carousel-item-end", i3 = o3 ? "carousel-item-next" : "carousel-item-prev";
    if (t2.classList.contains("active"))
      k2.current = false;
    else if (D2(e2, n2), r2 && t2)
      if (k2.current = true, l3 && B2(), null === (a2 = M2.current) || void 0 === a2 ? void 0 : a2.classList.contains("slide")) {
        t2.classList.add(i3), t2.offsetHeight, r2.classList.add(c3), t2.classList.add(c3);
        !function(e3, t3, n3) {
          if (void 0 === n3 && (n3 = true), n3) {
            var a3 = _e(t3);
            t3.addEventListener("transitionend", function() {
              return $e(e3);
            }, { once: true }), et(t3, a3);
          } else
            $e(e3);
        }(function() {
          F2(false), t2.classList.remove(c3, i3), t2.classList.add("active"), r2.classList.remove("active", i3, c3), k2.current = false;
        }, r2, true);
      } else
        r2.classList.remove("active"), t2.classList.add("active"), k2.current = false;
  }, [M2, C2, D2]), W2 = function(e2) {
    k2.current || (k2.current = true, setTimeout(function() {
      k2.current = false;
    }, e2));
  }, V2 = (0, import_react.useCallback)(function(e2) {
    var t2 = "prev" === e2, n2 = (E2.current + (t2 ? -1 : 1)) % S2, a2 = w2.current;
    return -1 === n2 ? a2[S2 - 1] : a2[n2];
  }, [S2]), Y2 = (0, import_react.useCallback)(function(e2) {
    if (!k2.current) {
      W2(600);
      var t2 = V2(e2);
      j2(e2, t2);
    }
  }, [V2, j2]), q2 = (0, import_react.useCallback)(function() {
    var e2, t2, n2, a2 = document.visibilityState, r2 = document.hidden;
    if (a2) {
      if (r2 || (e2 = M2.current, t2 = getComputedStyle(e2), n2 = getComputedStyle(null == e2 ? void 0 : e2.parentNode), "none" === t2.display || "none" === n2.display || "hidden" === t2.visibility))
        return;
      return Y2("next");
    }
    Y2("next");
  }, [M2, Y2]), X2 = (0, import_react.useCallback)(function() {
    y2.current && (clearInterval(y2.current), y2.current = null), y2.current = setInterval(q2, u2);
  }, [q2, u2]), U2 = (0, import_react.useCallback)(function(e2) {
    switch (e2.key) {
      case "ArrowLeft":
        e2.preventDefault(), Y2("prev");
        break;
      case "ArrowRight":
        e2.preventDefault(), Y2("next");
    }
  }, [Y2]);
  return (0, import_react.useEffect)(function() {
    if (m2)
      return window.addEventListener("keydown", U2), function() {
        window.removeEventListener("keydown", U2);
      };
  }, [U2, m2]), (0, import_react.useEffect)(function() {
    var e2 = function(e3) {
      return Array.from(null == e3 ? void 0 : e3.querySelectorAll(".carousel-item"));
    }(M2.current);
    w2.current = e2, P2(e2.length);
  }, [M2]), (0, import_react.useEffect)(function() {
    null == b2 || b2();
  }, [z2, b2]), (0, import_react.useEffect)(function() {
    X2();
  }, [X2]), import_react.default.createElement("div", v({ onTouchStart: function(e2) {
    f && O2({ initialX: e2.touches[0].clientX, initialY: e2.touches[0].clientY });
  }, onTouchMove: function(e2) {
    k2.current = true;
    var t2 = I2.initialX, n2 = I2.initialY;
    if (t2 && n2) {
      var a2 = t2 - e2.touches[0].clientX, r2 = n2 - e2.touches[0].clientY;
      Math.abs(a2) > Math.abs(r2) && Y2(a2 > 0 ? "prev" : "next"), O2({ initialX: 0, initialY: 0 });
    }
  }, onTouchEnd: function() {
    k2.current = false;
  }, onMouseEnter: B2, onMouseLeave: X2, className: H2, ref: M2 }, N2), import_react.default.createElement("div", { className: "carousel-inner" }, import_react.default.createElement(Ke.Provider, { value: { active: C2 } }, h2 && import_react.default.createElement(Qe, { to: function(e2) {
    if (!(k2.current || (W2(700), e2 > S2 - 1 || e2 < 0))) {
      var t2 = function(e3) {
        return { direction: e3 > E2.current ? "next" : "prev", nextElement: w2.current[e3] };
      }(e2), n2 = t2.direction, a2 = t2.nextElement;
      j2(n2, a2, e2);
    }
  }, imagesCount: S2 }), s2, p && import_react.default.createElement(Ze, { move: Y2 }))));
};
tt.defaultProps = { fade: false, interval: 5e3, touch: true, keyboard: false };
var nt = function(t2) {
  var r2 = t2.className, l2 = t2.captionClassName, o2 = t2.children, i2 = t2.src, s2 = t2.alt, u2 = t2.itemId, m2 = g(t2, ["className", "captionClassName", "children", "src", "alt", "itemId"]), f = (0, import_react.useContext)(Ke).active, p = (0, import_react.useRef)(true), h2 = (0, import_react.useRef)(null), b2 = clsx_m_default("carousel-caption d-none d-md-block", l2);
  return (0, import_react.useEffect)(function() {
    if (p.current && f === u2 - 1) {
      var e2 = h2.current;
      null == e2 || e2.classList.add("active");
    }
    p.current = false;
  }, [f, u2]), import_react.default.createElement("div", { className: "carousel-item", ref: h2 }, import_react.default.createElement("img", v({ className: r2, src: i2, alt: s2 }, m2)), import_react.default.createElement("div", { className: b2 }, o2));
};
var at = import_react.default.createContext({ activeItem: 0, setActiveItem: null, alwaysOpen: false, initialActive: 0 });
var rt = import_react.default.forwardRef(function(a2, r2) {
  var l2 = a2.alwaysOpen, o2 = a2.className, c2 = a2.flush, i2 = a2.initialActive, s2 = a2.tag, u2 = a2.children, m2 = a2.onChange, f = g(a2, ["alwaysOpen", "className", "flush", "initialActive", "tag", "children", "onChange"]), p = clsx_m_default("accordion", c2 && "accordion-flush", o2), h2 = (0, import_react.useState)(i2), b2 = h2[0], N2 = h2[1];
  return (0, import_react.useEffect)(function() {
    b2 && m2 && m2(b2);
  }, [m2, b2]), import_react.default.createElement(s2, v({ className: p, ref: r2 }, f), import_react.default.createElement(at.Provider, { value: { activeItem: b2, setActiveItem: N2, alwaysOpen: l2, initialActive: i2 } }, u2));
});
rt.defaultProps = { tag: "div", initialActive: 0 };
var lt = import_react.default.forwardRef(function(n2, a2) {
  var r2 = n2.className, l2 = n2.bodyClassName, o2 = n2.bodyStyle, i2 = n2.headerClassName, s2 = n2.collapseId, u2 = n2.headerTitle, m2 = n2.headerStyle, f = n2.tag, p = n2.children, h2 = g(n2, ["className", "bodyClassName", "bodyStyle", "headerClassName", "collapseId", "headerTitle", "headerStyle", "tag", "children"]), b2 = (0, import_react.useContext)(at), N2 = b2.activeItem, w2 = b2.setActiveItem, y2 = b2.alwaysOpen, E2 = b2.initialActive, k2 = (0, import_react.useState)(E2), x2 = k2[0], C2 = k2[1], T2 = clsx_m_default("accordion-item", r2), R2 = clsx_m_default("accordion-header", i2), S2 = clsx_m_default("accordion-body", l2), P2 = clsx_m_default("accordion-button", y2 ? s2 !== x2 && "collapsed" : s2 !== N2 && "collapsed");
  return import_react.default.createElement(f, v({ className: T2, ref: a2 }, h2), import_react.default.createElement("h2", { className: R2, style: m2 }, import_react.default.createElement("button", { onClick: function() {
    return e2 = s2, void (y2 ? C2(e2 !== x2 ? e2 : 0) : w2(e2 !== N2 ? e2 : 0));
    var e2;
  }, className: P2, type: "button" }, u2)), import_react.default.createElement(de, { id: s2.toString(), show: y2 ? x2 === s2 : N2 === s2 }, import_react.default.createElement("div", { className: S2, style: o2 }, p)));
});
lt.defaultProps = { tag: "div" };
var ot = function(l2) {
  var o2, c2 = l2.className, i2 = l2.size, s2 = l2.contrast, u2 = l2.value, m2 = l2.defaultValue, f = l2.id, p = l2.labelClass, h2 = l2.wrapperClass, b2 = l2.wrapperStyle, N2 = l2.wrapperTag, w2 = l2.label, y2 = l2.onChange, E2 = l2.children, k2 = l2.labelRef, x2 = l2.labelStyle, C2 = l2.inputRef, T2 = l2.onBlur, R2 = l2.readonly, S2 = g(l2, ["className", "size", "contrast", "value", "defaultValue", "id", "labelClass", "wrapperClass", "wrapperStyle", "wrapperTag", "label", "onChange", "children", "labelRef", "labelStyle", "inputRef", "onBlur", "readonly"]), P2 = (0, import_react.useRef)(null), L2 = (0, import_react.useRef)(null), I2 = k2 || P2, O2 = C2 || L2, A2 = (0, import_react.useState)(u2 || m2), z2 = A2[0], F2 = A2[1], M2 = (0, import_react.useState)(0), H2 = M2[0], B2 = M2[1], D2 = (0, import_react.useState)(void 0 !== u2 && u2.length > 0 || (void 0 !== m2 && m2.length) > 0), j2 = D2[0], W2 = D2[1], V2 = clsx_m_default("form-outline", s2 && "form-white", h2), Y2 = clsx_m_default("form-control", j2 && "active", i2 && "form-control-".concat(i2), c2), q2 = clsx_m_default("form-label", p);
  (0, import_react.useEffect)(function() {
    var e2;
    I2.current && 0 !== (null === (e2 = I2.current) || void 0 === e2 ? void 0 : e2.clientWidth) && B2(0.8 * I2.current.clientWidth + 8);
  }, [I2, null === (o2 = I2.current) || void 0 === o2 ? void 0 : o2.clientWidth]);
  (0, import_react.useEffect)(function() {
    void 0 !== u2 && (u2.length > 0 ? W2(true) : W2(false));
  }, [u2]), (0, import_react.useEffect)(function() {
    void 0 !== m2 && (m2.length > 0 ? W2(true) : W2(false));
  }, [m2]);
  var X2 = (0, import_react.useCallback)(function(e2) {
    void 0 !== z2 && z2.length > 0 || void 0 !== u2 && u2.length > 0 ? W2(true) : W2(false), T2 && T2(e2);
  }, [z2, u2, T2]);
  return import_react.default.createElement(N2, { className: V2, style: v({}, b2) }, import_react.default.createElement("textarea", v({ readOnly: R2, className: Y2, onBlur: X2, onChange: function(e2) {
    F2(e2.currentTarget.value), y2 && y2(e2);
  }, onFocus: function() {
    I2.current && B2(0.8 * I2.current.clientWidth + 8);
  }, defaultValue: m2, value: u2, id: f, ref: O2 }, S2)), w2 && import_react.default.createElement("label", { className: q2, style: x2, htmlFor: f, ref: I2 }, w2), import_react.default.createElement("div", { className: "form-notch" }, import_react.default.createElement("div", { className: "form-notch-leading" }), import_react.default.createElement("div", { className: "form-notch-middle", style: { width: H2 } }), import_react.default.createElement("div", { className: "form-notch-trailing" })), E2);
};
ot.defaultProps = { wrapperTag: "div", readonly: false };
var ct = function(r2) {
  var l2 = r2.children, o2 = r2.invalid, c2 = r2.feedback, i2 = r2.tooltip, s2 = r2.tag, u2 = g(r2, ["children", "invalid", "feedback", "tooltip", "tag"]), f = (0, import_react.useState)(null), p = f[0], h2 = f[1], b2 = (0, import_react.useRef)(null), N2 = clsx_m_default(o2 ? "invalid-".concat(i2 ? "tooltip" : "feedback") : "valid-".concat(i2 ? "tooltip" : "feedback"));
  return (0, import_react.useEffect)(function() {
    var e2, t2, n2 = null === (t2 = null === (e2 = b2.current) || void 0 === e2 ? void 0 : e2.querySelector("input, textarea")) || void 0 === t2 ? void 0 : t2.parentElement;
    n2 && h2(n2);
  }, []), import_react.default.createElement(s2, v({ ref: b2 }, u2), p && (0, import_react_dom.createPortal)(import_react.default.createElement("div", { className: N2 }, c2), p), l2);
};
ct.defaultProps = { tag: "div", feedback: "Looks good!" };
export {
  rt as MDBAccordion,
  lt as MDBAccordionItem,
  w as MDBBadge,
  Y as MDBBreadcrumb,
  q as MDBBreadcrumbItem,
  k as MDBBtn,
  x as MDBBtnGroup,
  T as MDBCard,
  I as MDBCardBody,
  O as MDBCardFooter,
  M as MDBCardGroup,
  R as MDBCardHeader,
  A as MDBCardImage,
  F as MDBCardLink,
  z as MDBCardOverlay,
  S as MDBCardSubTitle,
  L as MDBCardText,
  P as MDBCardTitle,
  tt as MDBCarousel,
  nt as MDBCarouselItem,
  ie as MDBCheckbox,
  N as MDBCol,
  de as MDBCollapse,
  b as MDBContainer,
  ge as MDBDropdown,
  Ne as MDBDropdownItem,
  Ee as MDBDropdownMenu,
  ke as MDBDropdownToggle,
  We as MDBFile,
  Z as MDBFooter,
  W as MDBIcon,
  oe as MDBInput,
  Ve as MDBInputGroup,
  H as MDBListGroup,
  B as MDBListGroupItem,
  Re as MDBModal,
  Oe as MDBModalBody,
  Pe as MDBModalContent,
  Se as MDBModalDialog,
  Ae as MDBModalFooter,
  Le as MDBModalHeader,
  Ie as MDBModalTitle,
  X as MDBNavbar,
  G as MDBNavbarBrand,
  J as MDBNavbarItem,
  U as MDBNavbarLink,
  K as MDBNavbarNav,
  Q as MDBNavbarToggler,
  $ as MDBPagination,
  ee as MDBPaginationItem,
  _ as MDBPaginationLink,
  xe as MDBPopover,
  Ce as MDBPopoverBody,
  Te as MDBPopoverHeader,
  le as MDBProgress,
  re as MDBProgressBar,
  se as MDBRadio,
  je as MDBRange,
  E as MDBRipple,
  j as MDBRow,
  Fe as MDBScrollspy,
  Me as MDBScrollspyLink,
  He as MDBScrollspySubList,
  C as MDBSpinner,
  Be as MDBSwitch,
  te as MDBTable,
  ae as MDBTableBody,
  ne as MDBTableHead,
  qe as MDBTabs,
  Ge as MDBTabsContent,
  Xe as MDBTabsItem,
  Ue as MDBTabsLink,
  Je as MDBTabsPane,
  ot as MDBTextArea,
  D as MDBTooltip,
  V as MDBTypography,
  Ye as MDBValidation,
  ct as MDBValidationItem
};
//# sourceMappingURL=mdb-react-ui-kit.js.map
